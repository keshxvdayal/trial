{"ast":null,"code":"var Node = require('../core/document/Node');\nvar CSS = require('../core/document/CSS');\nvar NumberInput_Internal = require('./NumberInput_Internal');\nvar Mouse = require('../core/document/Mouse');\nvar ColorUtil = require('../core/color/ColorUtil');\nvar DocumentEvent = require('../core/document/DocumentEvent'),\n  NodeEvent = require('../core/document/NodeEvent');\nvar DEFAULT_VALUE_HUE = 200.0,\n  DEFAULT_VALUE_SAT = 50.0,\n  DEFAULT_VALUE_VAL = 50.0;\nfunction Picker(parentNode) {\n  var root = this._node = new Node().setStyleClass(CSS.Picker),\n    head = this._headNode = new Node().setStyleClass(CSS.Head),\n    labelWrap = new Node().setStyleClass(CSS.Wrap),\n    label = new Node().setStyleClass(CSS.Label),\n    menu = new Node().setStyleClass(CSS.Menu),\n    menuWrap = new Node().setStyleClass(CSS.Wrap);\n  var menuClose = new Node(Node.INPUT_BUTTON);\n  menuClose.setStyleClass(CSS.ButtonMenuClose);\n  var fieldWrap = new Node().setStyleClass(CSS.PickerFieldWrap),\n    sliderWrap = new Node().setStyleClass(CSS.SliderWrap),\n    inputWrap = new Node().setStyleClass(CSS.PickerInputWrap);\n  var canvasField = this._canvasField = document.createElement('canvas'),\n    canvasSlider = this._canvasSlider = document.createElement('Canvas');\n  fieldWrap.getElement().appendChild(canvasField);\n  sliderWrap.getElement().appendChild(canvasSlider);\n  this._setSizeCanvasField(154, 154);\n  this._setSizeCanvasSlider(14, 154);\n  var contextCanvasField = this._contextCanvasField = canvasField.getContext('2d'),\n    contextCanvasSlider = this._contextCanvasSlider = canvasSlider.getContext('2d');\n  var handleField = this._handleField = new Node();\n  handleField.setStyleClass(CSS.PickerHandleField);\n  var handleSlider = this._handleSlider = new Node();\n  handleSlider.setStyleClass(CSS.PickerHandleSlider);\n  var step = 1.0,\n    dp = 0;\n  var callbackHue = this._onInputHueChange.bind(this),\n    callbackSat = this._onInputSatChange.bind(this),\n    callbackVal = this._onInputValChange.bind(this),\n    callbackR = this._onInputRChange.bind(this),\n    callbackG = this._onInputGChange.bind(this),\n    callbackB = this._onInputBChange.bind(this);\n  var inputHue = this._inputHue = new NumberInput_Internal(step, dp, null, callbackHue),\n    inputSat = this._inputSat = new NumberInput_Internal(step, dp, null, callbackSat),\n    inputVal = this._inputVal = new NumberInput_Internal(step, dp, null, callbackVal),\n    inputR = this._inputR = new NumberInput_Internal(step, dp, null, callbackR),\n    inputG = this._inputG = new NumberInput_Internal(step, dp, null, callbackG),\n    inputB = this._inputB = new NumberInput_Internal(step, dp, null, callbackB);\n  var controlsWrap = new Node().setStyleClass(CSS.PickerControlsWrap);\n  var buttonPick = new Node(Node.INPUT_BUTTON).setStyleClass(CSS.Button).setProperty('value', 'pick'),\n    buttonCancel = new Node(Node.INPUT_BUTTON).setStyleClass(CSS.Button).setProperty('value', 'cancel');\n  var colorContrast = new Node().setStyleClass(CSS.PickerColorContrast);\n  var color0 = this._colorCurrNode = new Node(),\n    color1 = this._colorPrevNode = new Node();\n  colorContrast.addChild(color0);\n  colorContrast.addChild(color1);\n  controlsWrap.addChild(buttonCancel);\n  controlsWrap.addChild(buttonPick);\n  controlsWrap.addChild(colorContrast);\n  this._setContrasPrevColor(0, 0, 0);\n  var inputFieldWrapHue = new Node().setStyleClass(CSS.PickerInputField),\n    inputFieldWrapSat = new Node().setStyleClass(CSS.PickerInputField),\n    inputFieldWrapVal = new Node().setStyleClass(CSS.PickerInputField);\n  var inputFieldWrapHueLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML', 'H'),\n    inputFieldWrapSatLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML', 'S'),\n    inputFieldWrapValLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML', 'V');\n  inputFieldWrapHue.addChildren(inputFieldWrapHueLabel, inputHue.getNode());\n  inputFieldWrapSat.addChildren(inputFieldWrapSatLabel, inputSat.getNode());\n  inputFieldWrapVal.addChildren(inputFieldWrapValLabel, inputVal.getNode());\n  var inputFieldWrapR = new Node().setStyleClass(CSS.PickerInputField),\n    inputFieldWrapG = new Node().setStyleClass(CSS.PickerInputField),\n    inputFieldWrapB = new Node().setStyleClass(CSS.PickerInputField);\n  var inputFieldWrapRLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML', 'R'),\n    inputFieldWrapGLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML', 'G'),\n    inputFieldWrapBLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML', 'B');\n  inputFieldWrapR.addChildren(inputFieldWrapRLabel, inputR.getNode());\n  inputFieldWrapG.addChildren(inputFieldWrapGLabel, inputG.getNode());\n  inputFieldWrapB.addChildren(inputFieldWrapBLabel, inputB.getNode());\n  inputWrap.addChildren(inputFieldWrapR, inputFieldWrapHue, inputFieldWrapG, inputFieldWrapSat, inputFieldWrapB, inputFieldWrapVal, colorContrast);\n  var hexInputWrap = new Node();\n  hexInputWrap.setStyleClass(CSS.PickerInputWrap);\n  var inputHEX = this._inputHEX = new Node(Node.INPUT_TEXT),\n    inputFieldWrapHEX = new Node().setStyleClass(CSS.PickerInputField),\n    inputFieldWrapHEXLabel = new Node(Node.SPAN).setStyleClass(CSS.Label);\n  inputFieldWrapHEXLabel.setProperty('innerHTML', '#');\n  inputFieldWrapHEX.addChildren(inputFieldWrapHEXLabel, inputHEX);\n  hexInputWrap.addChild(inputFieldWrapHEX);\n  inputHEX.addEventListener(NodeEvent.CHANGE, this._onInputHEXFinish.bind(this));\n  label.setProperty('innerHTML', 'Color Picker');\n  menu.addChild(menuClose);\n  head.addChild(menu);\n  labelWrap.addChild(label);\n  head.addChild(labelWrap);\n  root.addChild(head);\n  root.addChild(menuWrap);\n\n  //wrapNode.addChild(paletteWrap);\n\n  menuWrap.addChild(fieldWrap);\n  menuWrap.addChild(sliderWrap);\n  menuWrap.addChild(inputWrap);\n  menuWrap.addChild(hexInputWrap);\n  menuWrap.addChild(controlsWrap);\n  fieldWrap.addChild(handleField);\n  sliderWrap.addChild(handleSlider);\n  var eventMouseDown = NodeEvent.MOUSE_DOWN,\n    callback = this._onCanvasFieldMouseDown.bind(this);\n  fieldWrap.addEventListener(eventMouseDown, callback);\n  handleField.addEventListener(eventMouseDown, callback);\n  callback = this._onCanvasSliderMouseDown.bind(this);\n  sliderWrap.addEventListener(eventMouseDown, callback);\n  handleSlider.addEventListener(eventMouseDown, callback);\n  menuClose.addEventListener(eventMouseDown, this._onClose.bind(this));\n  buttonPick.addEventListener(eventMouseDown, this._onPick.bind(this));\n  buttonCancel.addEventListener(eventMouseDown, this._onClose.bind(this));\n  head.addEventListener(NodeEvent.MOUSE_DOWN, this._onHeadDragStart.bind(this));\n  this._parentNode = parentNode;\n  this._mouseOffset = [0, 0];\n  this._position = [null, null];\n  this._canvasSliderPos = [0, 0];\n  this._canvasFieldPos = [0, 0];\n  this._handleFieldSize = 12;\n  this._handleSliderHeight = 7;\n  this._imageDataSlider = contextCanvasSlider.createImageData(canvasSlider.width, canvasSlider.height);\n  this._imageDataField = contextCanvasField.createImageData(canvasField.width, canvasField.height);\n  this._valueHueMinMax = [0, 360];\n  this._valueSatMinMax = this._valueValMinMax = [0, 100];\n  this._valueRGBMinMax = [0, 255];\n  this._valueHue = DEFAULT_VALUE_HUE;\n  this._valueSat = DEFAULT_VALUE_SAT;\n  this._valueVal = DEFAULT_VALUE_VAL;\n  this._valueR = 0;\n  this._valueG = 0;\n  this._valueB = 0;\n  this._valueHEX = '#000000';\n  this._valueHEXValid = this._valueHEX;\n  this._callbackPick = function () {};\n\n  //this._canvasFieldImageDataFunc = function(i,j){return this._HSV2RGB(this._valueHue,j)}\n\n  this._drawCanvasField();\n  this._drawCanvasSlider();\n  this._setColorHSV(this._valueHue, this._valueSat, this._valueVal);\n  this._updateColorRGBFromHSV();\n  this._updateColorHEXFromRGB();\n  this._updateHandles();\n}\nPicker.prototype = {\n  _drawHandleField: function () {\n    var canvas = this._canvasField,\n      nodePos = this._canvasFieldPos,\n      mousePos = Mouse.get().getPosition();\n    var posX = Math.max(0, Math.min(mousePos[0] - nodePos[0], canvas.width)),\n      posY = Math.max(0, Math.min(mousePos[1] - nodePos[1], canvas.height)),\n      posXNorm = posX / canvas.width,\n      posYNorm = posY / canvas.height;\n    var sat = Math.round(posXNorm * this._valueSatMinMax[1]),\n      val = Math.round((1.0 - posYNorm) * this._valueValMinMax[1]);\n    this._setColorHSV(this._valueHue, sat, val);\n    this._updateColorRGBFromHSV();\n    this._updateColorHEXFromRGB();\n    this._updateHandleField();\n  },\n  _updateHandleField: function () {\n    var width = this._canvasField.width,\n      height = this._canvasField.height,\n      offsetHandle = this._handleFieldSize * 0.25;\n    var satNorm = this._valueSat / this._valueSatMinMax[1],\n      valNorm = this._valueVal / this._valueValMinMax[1];\n    this._handleField.setPositionGlobal(satNorm * width - offsetHandle, (1.0 - valNorm) * height - offsetHandle);\n  },\n  _drawHandleSlider: function () {\n    var canvas = this._canvasSlider,\n      canvasPosY = this._canvasSliderPos[1],\n      mousePosY = Mouse.get().getY();\n    var posY = Math.max(0, Math.min(mousePosY - canvasPosY, canvas.height)),\n      posYNorm = posY / canvas.height;\n    var hue = Math.floor((1.0 - posYNorm) * this._valueHueMinMax[1]);\n    this._setColorHSV(hue, this._valueSat, this._valueVal);\n    this._updateColorRGBFromHSV();\n    this._updateColorHEXFromRGB();\n    this._updateHandleSlider();\n  },\n  _updateHandleSlider: function () {\n    var height = this._canvasSlider.height,\n      offsetHandle = this._handleSliderHeight * 0.25;\n    var hueNorm = this._valueHue / this._valueHueMinMax[1];\n    this._handleSlider.setPositionGlobalY((height - offsetHandle) * (1.0 - hueNorm));\n  },\n  _updateHandles: function () {\n    this._updateHandleField();\n    this._updateHandleSlider();\n  },\n  /*---------------------------------------------------------------------------------*/\n\n  _setHue: function (value) {\n    var minMax = this._valueHueMinMax;\n    this._valueHue = value == minMax[1] ? minMax[0] : value;\n    this._updateColorHSV();\n    this._drawCanvasField();\n  },\n  _setSat: function (value) {\n    this._valueSat = Math.round(value);\n    this._updateColorHSV();\n  },\n  _setVal: function (value) {\n    this._valueVal = Math.round(value);\n    this._updateColorHSV();\n  },\n  _setR: function (value) {\n    this._valueR = Math.round(value);\n    this._updateColorRGB();\n  },\n  _setG: function (value) {\n    this._valueG = Math.round(value);\n    this._updateColorRGB();\n  },\n  _setB: function (value) {\n    this._valueB = Math.round(value);\n    this._updateColorRGB();\n  },\n  /*---------------------------------------------------------------------------------*/\n\n  _onInputHueChange: function () {\n    var input = this._inputHue,\n      inputVal = this._getValueContrained(input, this._valueHueMinMax);\n    var minMax = this._valueHueMinMax;\n    if (inputVal == minMax[1]) {\n      inputVal = minMax[0];\n      input.setValue(inputVal);\n    }\n    this._setHue(inputVal);\n    this._updateColorRGBFromHSV();\n    this._updateColorHEXFromRGB();\n    this._updateHandleSlider();\n    this._drawCanvasField();\n  },\n  _onInputSatChange: function () {\n    this._setSat(this._getValueContrained(this._inputSat, this._valueSatMinMax));\n    this._onInputSVChange();\n  },\n  _onInputValChange: function () {\n    this._setVal(this._getValueContrained(this._inputVal, this._valueValMinMax));\n    this._onInputSVChange();\n  },\n  _onInputRChange: function () {\n    this._setR(this._getValueContrained(this._inputR, this._valueRGBMinMax));\n    this._onInputRGBChange();\n  },\n  _onInputGChange: function () {\n    this._setG(this._getValueContrained(this._inputG, this._valueRGBMinMax));\n    this._onInputRGBChange();\n  },\n  _onInputBChange: function () {\n    this._setB(this._getValueContrained(this._inputB, this._valueRGBMinMax));\n    this._onInputRGBChange();\n  },\n  _onInputHEXFinish: function () {\n    var input = this._inputHEX,\n      value = input.getProperty('value');\n    if (!ColorUtil.isValidHEX(value)) {\n      input.setProperty('value', this._valueHEXValid);\n      return;\n    }\n    this._valueHEX = this._valueHEXValid = value;\n    this._updateColorFromHEX();\n  },\n  _onInputSVChange: function () {\n    this._updateColorRGBFromHSV();\n    this._updateColorHEXFromRGB();\n    this._updateHandleField();\n  },\n  _onInputRGBChange: function () {\n    this._updateColorHSVFromRGB();\n    this._updateColorHEXFromRGB();\n    this._updateHandles();\n  },\n  _getValueContrained: function (input, minMax) {\n    var inputVal = Math.round(input.getValue()),\n      min = minMax[0],\n      max = minMax[1];\n    if (inputVal <= min) {\n      inputVal = min;\n      input.setValue(inputVal);\n    }\n    if (inputVal >= max) {\n      inputVal = max;\n      input.setValue(inputVal);\n    }\n    return inputVal;\n  },\n  _updateInputHue: function () {\n    this._inputHue.setValue(this._valueHue);\n  },\n  _updateInputSat: function () {\n    this._inputSat.setValue(this._valueSat);\n  },\n  _updateInputVal: function () {\n    this._inputVal.setValue(this._valueVal);\n  },\n  _updateInputR: function () {\n    this._inputR.setValue(this._valueR);\n  },\n  _updateInputG: function () {\n    this._inputG.setValue(this._valueG);\n  },\n  _updateInputB: function () {\n    this._inputB.setValue(this._valueB);\n  },\n  _updateInputHEX: function () {\n    this._inputHEX.setProperty('value', this._valueHEX);\n  },\n  _setColorHSV: function (hue, sat, val) {\n    this._valueHue = hue;\n    this._valueSat = sat;\n    this._valueVal = val;\n    this._updateInputHue();\n    this._updateInputSat();\n    this._updateInputVal();\n    this._updateContrastCurrColor();\n  },\n  _setColorRGB: function (r, g, b) {\n    this._valueR = r;\n    this._valueG = g;\n    this._valueB = b;\n    this._updateInputR();\n    this._updateInputG();\n    this._updateInputB();\n    this._updateContrastCurrColor();\n  },\n  _setColorHEX: function (hex) {\n    this._valueHEX = hex;\n    this._updateInputHEX();\n  },\n  _updateColorHSV: function () {\n    this._setColorHSV(this._valueHue, this._valueSat, this._valueVal);\n    this._updateContrastCurrColor();\n  },\n  _updateColorRGB: function () {\n    this._setColorRGB(this._valueR, this._valueG, this._valueB);\n    this._updateContrastCurrColor();\n  },\n  _updateColorHSVFromRGB: function () {\n    var hsv = ColorUtil.RGB2HSV(this._valueR, this._valueG, this._valueB);\n    this._setColorHSV(hsv[0], hsv[1], hsv[2]);\n  },\n  _updateColorRGBFromHSV: function () {\n    var rgb = ColorUtil.HSV2RGB(this._valueHue, this._valueSat, this._valueVal);\n    this._setColorRGB(rgb[0], rgb[1], rgb[2]);\n  },\n  _updateColorHEXFromRGB: function () {\n    var hex = ColorUtil.RGB2HEX(this._valueR, this._valueG, this._valueB);\n    this._setColorHEX(hex);\n  },\n  _updateColorFromHEX: function () {\n    var rgb = ColorUtil.HEX2RGB(this._valueHEX);\n    this._setColorRGB(rgb[0], rgb[1], rgb[2]);\n    this._updateColorHSVFromRGB();\n    this._updateHandles();\n  },\n  _updateContrastCurrColor: function () {\n    this._setContrastCurrColor(this._valueR, this._valueG, this._valueB);\n  },\n  _updateContrastPrevColor: function () {\n    this._setContrasPrevColor(this._valueR, this._valueG, this._valueB);\n  },\n  _setContrastCurrColor: function (r, g, b) {\n    this._colorCurrNode.setStyleProperty('background', 'rgb(' + r + ',' + g + ',' + b + ')');\n  },\n  _setContrasPrevColor: function (r, g, b) {\n    this._colorPrevNode.setStyleProperty('background', 'rgb(' + r + ',' + g + ',' + b + ')');\n  },\n  _onHeadDragStart: function () {\n    var node = this._node,\n      parentNode = this._parentNode;\n    var nodePos = node.getPositionGlobal(),\n      mousePos = Mouse.get().getPosition(),\n      offsetPos = this._mouseOffset;\n    offsetPos[0] = mousePos[0] - nodePos[0];\n    offsetPos[1] = mousePos[1] - nodePos[1];\n    var eventMouseMove = DocumentEvent.MOUSE_MOVE,\n      eventMouseUp = DocumentEvent.MOUSE_UP;\n    var self = this;\n    var onDrag = function () {\n        self._updatePosition();\n        self._updateCanvasNodePositions();\n      },\n      onDragEnd = function () {\n        self._updateCanvasNodePositions();\n        document.removeEventListener(eventMouseMove, onDrag, false);\n        document.removeEventListener(eventMouseUp, onDragEnd, false);\n      };\n    parentNode.removeChild(node);\n    parentNode.addChild(node);\n    document.addEventListener(eventMouseMove, onDrag, false);\n    document.addEventListener(eventMouseUp, onDragEnd, false);\n    this._updateCanvasNodePositions();\n  },\n  _updatePosition: function () {\n    var mousePos = Mouse.get().getPosition(),\n      offsetPos = this._mouseOffset;\n    var currPositionX = mousePos[0] - offsetPos[0],\n      currPositionY = mousePos[1] - offsetPos[1];\n    var node = this._node,\n      head = this._headNode,\n      position = this._position;\n    var maxX = window.innerWidth - node.getWidth(),\n      maxY = window.innerHeight - head.getHeight();\n    position[0] = Math.max(0, Math.min(currPositionX, maxX));\n    position[1] = Math.max(0, Math.min(currPositionY, maxY));\n    node.setPositionGlobal(position[0], position[1]);\n  },\n  _drawCanvasField: function () {\n    var canvas = this._canvasField,\n      context = this._contextCanvasField;\n    var width = canvas.width,\n      height = canvas.height,\n      invWidth = 1 / width,\n      invHeight = 1 / height;\n    var imageData = this._imageDataField,\n      rgb = [],\n      index = 0;\n    var valueHue = this._valueHue;\n    var i = -1,\n      j;\n    while (++i < height) {\n      j = -1;\n      while (++j < width) {\n        rgb = ColorUtil.HSV2RGB(valueHue, j * invWidth * 100.0, (1.0 - i * invHeight) * 100.0);\n        index = (i * width + j) * 4;\n        imageData.data[index] = rgb[0];\n        imageData.data[index + 1] = rgb[1];\n        imageData.data[index + 2] = rgb[2];\n        imageData.data[index + 3] = 255;\n      }\n    }\n    context.putImageData(imageData, 0, 0);\n  },\n  _drawCanvasSlider: function () {\n    var canvas = this._canvasSlider,\n      context = this._contextCanvasSlider;\n    var width = canvas.width,\n      height = canvas.height,\n      invHeight = 1 / height;\n    var imageData = this._imageDataSlider,\n      rgb = [],\n      index = 0;\n    var i = -1,\n      j;\n    while (++i < height) {\n      j = -1;\n      while (++j < width) {\n        rgb = ColorUtil.HSV2RGB((1.0 - i * invHeight) * 360.0, 100.0, 100.0);\n        index = (i * width + j) * 4;\n        imageData.data[index] = rgb[0];\n        imageData.data[index + 1] = rgb[1];\n        imageData.data[index + 2] = rgb[2];\n        imageData.data[index + 3] = 255;\n      }\n    }\n    context.putImageData(imageData, 0, 0);\n  },\n  _onCanvasFieldMouseDown: function () {\n    var eventMouseMove = DocumentEvent.MOUSE_MOVE,\n      eventMouseUp = DocumentEvent.MOUSE_UP;\n    var self = this;\n    var onDrag = function () {\n        self._drawHandleField();\n      },\n      onDragEnd = function () {\n        document.removeEventListener(eventMouseMove, onDrag, false);\n        document.removeEventListener(eventMouseUp, onDragEnd, false);\n      };\n    document.addEventListener(eventMouseMove, onDrag, false);\n    document.addEventListener(eventMouseUp, onDragEnd, false);\n    self._drawHandleField();\n  },\n  _onCanvasSliderMouseDown: function () {\n    var eventMouseMove = DocumentEvent.MOUSE_MOVE,\n      eventMouseUp = DocumentEvent.MOUSE_UP;\n    var self = this;\n    var onDrag = function () {\n        self._drawHandleSlider();\n        self._drawCanvasField();\n      },\n      onDragEnd = function () {\n        document.removeEventListener(eventMouseMove, onDrag, false);\n        document.removeEventListener(eventMouseUp, onDragEnd, false);\n        self._drawCanvasField();\n      };\n    document.addEventListener(eventMouseMove, onDrag, false);\n    document.addEventListener(eventMouseUp, onDragEnd, false);\n    self._drawHandleSlider();\n    self._drawCanvasField();\n  },\n  _setSizeCanvasField: function (width, height) {\n    var canvas = this._canvasField;\n    canvas.style.width = width + 'px';\n    canvas.style.height = height + 'px';\n    canvas.width = width;\n    canvas.height = height;\n  },\n  _setSizeCanvasSlider: function (width, height) {\n    var canvas = this._canvasSlider;\n    canvas.style.width = width + 'px';\n    canvas.style.height = height + 'px';\n    canvas.width = width;\n    canvas.height = height;\n  },\n  open: function () {\n    var node = this._node;\n    this._parentNode.addChild(node);\n    var position = this._position;\n    if (position[0] === null || position[1] === null) {\n      position[0] = window.innerWidth * 0.5 - node.getWidth() * 0.5;\n      position[1] = window.innerHeight * 0.5 - node.getHeight() * 0.5;\n    } else {\n      position[0] = Math.max(0, Math.min(position[0], window.innerWidth - node.getWidth()));\n      position[1] = Math.max(0, Math.min(position[1], window.innerHeight - node.getHeight()));\n    }\n    node.setPositionGlobal(position[0], position[1]);\n    this._updateCanvasNodePositions();\n  },\n  close: function () {\n    this._parentNode.removeChild(this._node);\n  },\n  _onClose: function (e) {\n    e.cancelBubble = true;\n    this.close();\n  },\n  _onPick: function () {\n    this._callbackPick();\n    this.close();\n  },\n  _updateCanvasNodePositions: function () {\n    var canvasSliderPos = this._canvasSliderPos,\n      canvasFieldPos = this._canvasFieldPos;\n    canvasSliderPos[0] = canvasSliderPos[1] = 0;\n    canvasFieldPos[0] = canvasFieldPos[1] = 0;\n    var element = this._canvasSlider;\n    while (element) {\n      canvasSliderPos[0] += element.offsetLeft;\n      canvasSliderPos[1] += element.offsetTop;\n      element = element.offsetParent;\n    }\n    element = this._canvasField;\n    while (element) {\n      canvasFieldPos[0] += element.offsetLeft;\n      canvasFieldPos[1] += element.offsetTop;\n      element = element.offsetParent;\n    }\n  },\n  setCallbackPick: function (func) {\n    this._callbackPick = func;\n  },\n  setColorHEX: function (hex) {\n    this._setColorHEX(hex);\n    this._updateColorFromHEX();\n    this._setColor();\n  },\n  setColorRGB: function (r, g, b) {\n    this._setColorRGB(r, g, b);\n    this._updateColorHEXFromRGB();\n    this._updateColorHSVFromRGB();\n    this._setColor();\n  },\n  setColorRGBfv: function (r, g, b) {\n    this.setColorRGB(Math.floor(r * 255.0), Math.floor(g * 255.0), Math.floor(b * 255.0));\n  },\n  setColorHSV: function (h, s, v) {\n    this._setColorHSV(h, s, v);\n    this._updateColorRGBFromHSV();\n    this._updateColorHEXFromRGB();\n    this._setColor();\n  },\n  _setColor: function () {\n    this._drawCanvasField();\n    this._drawCanvasSlider();\n    this._updateHandles();\n    this._setContrasPrevColor(this._valueR, this._valueG, this._valueB);\n  },\n  getR: function () {\n    return this._valueR;\n  },\n  getG: function () {\n    return this._valueG;\n  },\n  getB: function () {\n    return this._valueB;\n  },\n  getRGB: function () {\n    return [this._valueR, this._valueG, this._valueB];\n  },\n  getHue: function () {\n    return this._valueHue;\n  },\n  getSat: function () {\n    return this._valueSat;\n  },\n  getVal: function () {\n    return this._valueVal;\n  },\n  getHSV: function () {\n    return [this._valueHue, this._valueSat, this._valueVal];\n  },\n  getHEX: function () {\n    return this._valueHEX;\n  },\n  getRGBfv: function () {\n    return [this._valueR / 255.0, this._valueG / 255.0, this._valueB / 255.0];\n  },\n  getNode: function () {\n    return this._node;\n  }\n};\nPicker.setup = function (parentNode) {\n  return Picker._instance = new Picker(parentNode);\n};\nPicker.get = function () {\n  return Picker._instance;\n};\nPicker.destroy = function () {\n  Picker._instance = null;\n};\nmodule.exports = Picker;","map":{"version":3,"names":["Node","require","CSS","NumberInput_Internal","Mouse","ColorUtil","DocumentEvent","NodeEvent","DEFAULT_VALUE_HUE","DEFAULT_VALUE_SAT","DEFAULT_VALUE_VAL","Picker","parentNode","root","_node","setStyleClass","head","_headNode","Head","labelWrap","Wrap","label","Label","menu","Menu","menuWrap","menuClose","INPUT_BUTTON","ButtonMenuClose","fieldWrap","PickerFieldWrap","sliderWrap","SliderWrap","inputWrap","PickerInputWrap","canvasField","_canvasField","document","createElement","canvasSlider","_canvasSlider","getElement","appendChild","_setSizeCanvasField","_setSizeCanvasSlider","contextCanvasField","_contextCanvasField","getContext","contextCanvasSlider","_contextCanvasSlider","handleField","_handleField","PickerHandleField","handleSlider","_handleSlider","PickerHandleSlider","step","dp","callbackHue","_onInputHueChange","bind","callbackSat","_onInputSatChange","callbackVal","_onInputValChange","callbackR","_onInputRChange","callbackG","_onInputGChange","callbackB","_onInputBChange","inputHue","_inputHue","inputSat","_inputSat","inputVal","_inputVal","inputR","_inputR","inputG","_inputG","inputB","_inputB","controlsWrap","PickerControlsWrap","buttonPick","Button","setProperty","buttonCancel","colorContrast","PickerColorContrast","color0","_colorCurrNode","color1","_colorPrevNode","addChild","_setContrasPrevColor","inputFieldWrapHue","PickerInputField","inputFieldWrapSat","inputFieldWrapVal","inputFieldWrapHueLabel","SPAN","inputFieldWrapSatLabel","inputFieldWrapValLabel","addChildren","getNode","inputFieldWrapR","inputFieldWrapG","inputFieldWrapB","inputFieldWrapRLabel","inputFieldWrapGLabel","inputFieldWrapBLabel","hexInputWrap","inputHEX","_inputHEX","INPUT_TEXT","inputFieldWrapHEX","inputFieldWrapHEXLabel","addEventListener","CHANGE","_onInputHEXFinish","eventMouseDown","MOUSE_DOWN","callback","_onCanvasFieldMouseDown","_onCanvasSliderMouseDown","_onClose","_onPick","_onHeadDragStart","_parentNode","_mouseOffset","_position","_canvasSliderPos","_canvasFieldPos","_handleFieldSize","_handleSliderHeight","_imageDataSlider","createImageData","width","height","_imageDataField","_valueHueMinMax","_valueSatMinMax","_valueValMinMax","_valueRGBMinMax","_valueHue","_valueSat","_valueVal","_valueR","_valueG","_valueB","_valueHEX","_valueHEXValid","_callbackPick","_drawCanvasField","_drawCanvasSlider","_setColorHSV","_updateColorRGBFromHSV","_updateColorHEXFromRGB","_updateHandles","prototype","_drawHandleField","canvas","nodePos","mousePos","get","getPosition","posX","Math","max","min","posY","posXNorm","posYNorm","sat","round","val","_updateHandleField","offsetHandle","satNorm","valNorm","setPositionGlobal","_drawHandleSlider","canvasPosY","mousePosY","getY","hue","floor","_updateHandleSlider","hueNorm","setPositionGlobalY","_setHue","value","minMax","_updateColorHSV","_setSat","_setVal","_setR","_updateColorRGB","_setG","_setB","input","_getValueContrained","setValue","_onInputSVChange","_onInputRGBChange","getProperty","isValidHEX","_updateColorFromHEX","_updateColorHSVFromRGB","getValue","_updateInputHue","_updateInputSat","_updateInputVal","_updateInputR","_updateInputG","_updateInputB","_updateInputHEX","_updateContrastCurrColor","_setColorRGB","r","g","b","_setColorHEX","hex","hsv","RGB2HSV","rgb","HSV2RGB","RGB2HEX","HEX2RGB","_setContrastCurrColor","_updateContrastPrevColor","setStyleProperty","node","getPositionGlobal","offsetPos","eventMouseMove","MOUSE_MOVE","eventMouseUp","MOUSE_UP","self","onDrag","_updatePosition","_updateCanvasNodePositions","onDragEnd","removeEventListener","removeChild","currPositionX","currPositionY","position","maxX","window","innerWidth","getWidth","maxY","innerHeight","getHeight","context","invWidth","invHeight","imageData","index","valueHue","i","j","data","putImageData","style","open","close","e","cancelBubble","canvasSliderPos","canvasFieldPos","element","offsetLeft","offsetTop","offsetParent","setCallbackPick","func","setColorHEX","_setColor","setColorRGB","setColorRGBfv","setColorHSV","h","s","v","getR","getG","getB","getRGB","getHue","getSat","getVal","getHSV","getHEX","getRGBfv","setup","_instance","destroy","module","exports"],"sources":["/Users/jarvis/Desktop/Porfolio/KESHAV'S portfolio/Portfolio/node_modules/controlkit/lib/component/Picker.js"],"sourcesContent":["var Node = require('../core/document/Node');\n\nvar CSS = require('../core/document/CSS');\nvar NumberInput_Internal = require('./NumberInput_Internal');\nvar Mouse = require('../core/document/Mouse');\nvar ColorUtil = require('../core/color/ColorUtil');\nvar DocumentEvent = require('../core/document/DocumentEvent'),\n    NodeEvent     = require('../core/document/NodeEvent');\n\nvar DEFAULT_VALUE_HUE = 200.0,\n    DEFAULT_VALUE_SAT = 50.0,\n    DEFAULT_VALUE_VAL = 50.0;\n\nfunction Picker(parentNode){\n    var root = this._node     = new Node().setStyleClass(CSS.Picker),\n        head = this._headNode = new Node().setStyleClass(CSS.Head),\n        labelWrap = new Node().setStyleClass(CSS.Wrap),\n        label = new Node().setStyleClass(CSS.Label),\n        menu = new Node().setStyleClass(CSS.Menu),\n        menuWrap = new Node().setStyleClass(CSS.Wrap);\n\n    var menuClose = new Node(Node.INPUT_BUTTON);\n        menuClose.setStyleClass(CSS.ButtonMenuClose);\n\n    var fieldWrap  = new Node().setStyleClass( CSS.PickerFieldWrap),\n        sliderWrap = new Node().setStyleClass(CSS.SliderWrap),\n        inputWrap  = new Node().setStyleClass( CSS.PickerInputWrap);\n\n    var canvasField  = this._canvasField  = document.createElement('canvas'),\n        canvasSlider = this._canvasSlider = document.createElement('Canvas');\n\n        fieldWrap.getElement().appendChild(canvasField);\n        sliderWrap.getElement().appendChild(canvasSlider);\n\n        this._setSizeCanvasField(154,154);\n        this._setSizeCanvasSlider(14,154);\n\n    var contextCanvasField  = this._contextCanvasField  = canvasField.getContext('2d'),\n        contextCanvasSlider = this._contextCanvasSlider = canvasSlider.getContext('2d');\n\n    var handleField  = this._handleField  = new Node();\n        handleField.setStyleClass(CSS.PickerHandleField);\n\n    var handleSlider = this._handleSlider = new Node();\n        handleSlider.setStyleClass(CSS.PickerHandleSlider);\n\n    var step = 1.0,\n        dp   = 0;\n\n    var callbackHue = this._onInputHueChange.bind(this),\n        callbackSat = this._onInputSatChange.bind(this),\n        callbackVal = this._onInputValChange.bind(this),\n        callbackR   = this._onInputRChange.bind(this),\n        callbackG   = this._onInputGChange.bind(this),\n        callbackB   = this._onInputBChange.bind(this);\n\n\n    var inputHue = this._inputHue = new NumberInput_Internal(step,dp,null,callbackHue),\n        inputSat = this._inputSat = new NumberInput_Internal(step,dp,null,callbackSat),\n        inputVal = this._inputVal = new NumberInput_Internal(step,dp,null,callbackVal),\n        inputR   = this._inputR   = new NumberInput_Internal(step,dp,null,callbackR),\n        inputG   = this._inputG   = new NumberInput_Internal(step,dp,null,callbackG),\n        inputB   = this._inputB   = new NumberInput_Internal(step,dp,null,callbackB);\n\n    var controlsWrap = new Node().setStyleClass(CSS.PickerControlsWrap);\n\n    var buttonPick   = new Node(Node.INPUT_BUTTON).setStyleClass(CSS.Button).setProperty('value','pick'),\n        buttonCancel = new Node(Node.INPUT_BUTTON).setStyleClass(CSS.Button).setProperty('value','cancel');\n\n\n    var colorContrast = new Node().setStyleClass(CSS.PickerColorContrast);\n\n    var color0 = this._colorCurrNode = new Node(),\n        color1 = this._colorPrevNode = new Node();\n\n    colorContrast.addChild(color0);\n    colorContrast.addChild(color1);\n\n    controlsWrap.addChild(buttonCancel);\n    controlsWrap.addChild(buttonPick);\n    controlsWrap.addChild(colorContrast);\n\n    this._setContrasPrevColor(0,0,0);\n\n    var inputFieldWrapHue = new Node().setStyleClass(CSS.PickerInputField),\n        inputFieldWrapSat = new Node().setStyleClass(CSS.PickerInputField),\n        inputFieldWrapVal = new Node().setStyleClass(CSS.PickerInputField);\n\n    var inputFieldWrapHueLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML','H'),\n        inputFieldWrapSatLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML','S'),\n        inputFieldWrapValLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML','V');\n\n        inputFieldWrapHue.addChildren(inputFieldWrapHueLabel,inputHue.getNode());\n        inputFieldWrapSat.addChildren(inputFieldWrapSatLabel,inputSat.getNode());\n        inputFieldWrapVal.addChildren(inputFieldWrapValLabel,inputVal.getNode());\n\n    var inputFieldWrapR = new Node().setStyleClass(CSS.PickerInputField),\n        inputFieldWrapG = new Node().setStyleClass(CSS.PickerInputField),\n        inputFieldWrapB = new Node().setStyleClass(CSS.PickerInputField);\n\n    var inputFieldWrapRLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML','R'),\n        inputFieldWrapGLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML','G'),\n        inputFieldWrapBLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML','B');\n\n        inputFieldWrapR.addChildren(inputFieldWrapRLabel,inputR.getNode());\n        inputFieldWrapG.addChildren(inputFieldWrapGLabel,inputG.getNode());\n        inputFieldWrapB.addChildren(inputFieldWrapBLabel,inputB.getNode());\n\n\n        inputWrap.addChildren(inputFieldWrapR,inputFieldWrapHue,\n                              inputFieldWrapG,inputFieldWrapSat,\n                              inputFieldWrapB,inputFieldWrapVal,colorContrast);\n\n    var hexInputWrap = new Node();\n        hexInputWrap.setStyleClass(CSS.PickerInputWrap);\n\n    var inputHEX = this._inputHEX = new Node(Node.INPUT_TEXT),\n        inputFieldWrapHEX         = new Node().setStyleClass(CSS.PickerInputField),\n        inputFieldWrapHEXLabel    = new Node(Node.SPAN).setStyleClass(CSS.Label);\n\n        inputFieldWrapHEXLabel.setProperty('innerHTML','#');\n        inputFieldWrapHEX.addChildren(inputFieldWrapHEXLabel,inputHEX);\n\n        hexInputWrap.addChild(inputFieldWrapHEX);\n\n        inputHEX.addEventListener(NodeEvent.CHANGE,this._onInputHEXFinish.bind(this));\n\n        label.setProperty('innerHTML','Color Picker');\n\n        menu.addChild(menuClose);\n        head.addChild(menu);\n        labelWrap.addChild(label);\n        head.addChild(labelWrap);\n        root.addChild(head);\n        root.addChild(menuWrap);\n\n        //wrapNode.addChild(paletteWrap);\n\n        menuWrap.addChild(fieldWrap);\n        menuWrap.addChild(sliderWrap);\n        menuWrap.addChild(inputWrap);\n        menuWrap.addChild(hexInputWrap);\n        menuWrap.addChild(controlsWrap);\n\n        fieldWrap.addChild( handleField);\n        sliderWrap.addChild(handleSlider);\n\n    var eventMouseDown = NodeEvent.MOUSE_DOWN,\n        callback       = this._onCanvasFieldMouseDown.bind(this);\n\n        fieldWrap.addEventListener(  eventMouseDown, callback);\n        handleField.addEventListener(eventMouseDown, callback);\n\n        callback = this._onCanvasSliderMouseDown.bind(this);\n\n        sliderWrap.addEventListener(  eventMouseDown, callback);\n        handleSlider.addEventListener(eventMouseDown, callback);\n\n        menuClose.addEventListener(   eventMouseDown, this._onClose.bind(this));\n        buttonPick.addEventListener(  eventMouseDown, this._onPick.bind(this));\n        buttonCancel.addEventListener(eventMouseDown, this._onClose.bind(this));\n\n        head.addEventListener(NodeEvent.MOUSE_DOWN, this._onHeadDragStart.bind(this));\n\n    this._parentNode = parentNode;\n\n    this._mouseOffset = [0,0];\n    this._position    = [null,null];\n\n    this._canvasSliderPos = [0,0];\n    this._canvasFieldPos  = [0,0];\n    this._handleFieldSize    = 12;\n    this._handleSliderHeight = 7;\n\n    this._imageDataSlider = contextCanvasSlider.createImageData(canvasSlider.width,canvasSlider.height);\n    this._imageDataField  = contextCanvasField.createImageData( canvasField.width, canvasField.height);\n\n    this._valueHueMinMax = [0,360];\n    this._valueSatMinMax = this._valueValMinMax = [0,100];\n    this._valueRGBMinMax = [0,255];\n\n    this._valueHue = DEFAULT_VALUE_HUE;\n    this._valueSat = DEFAULT_VALUE_SAT;\n    this._valueVal = DEFAULT_VALUE_VAL;\n    this._valueR   = 0;\n    this._valueG   = 0;\n    this._valueB   = 0;\n\n    this._valueHEX = '#000000';\n    this._valueHEXValid = this._valueHEX;\n\n    this._callbackPick = function(){};\n\n    //this._canvasFieldImageDataFunc = function(i,j){return this._HSV2RGB(this._valueHue,j)}\n\n    this._drawCanvasField();\n    this._drawCanvasSlider();\n\n    this._setColorHSV(this._valueHue,this._valueSat,this._valueVal);\n\n    this._updateColorRGBFromHSV();\n    this._updateColorHEXFromRGB();\n\n    this._updateHandles();\n}\n\nPicker.prototype =\n{\n    _drawHandleField: function () {\n        var canvas = this._canvasField,\n            nodePos = this._canvasFieldPos,\n            mousePos = Mouse.get().getPosition();\n\n        var posX = Math.max(0, Math.min(mousePos[0] - nodePos[0], canvas.width)),\n            posY = Math.max(0, Math.min(mousePos[1] - nodePos[1], canvas.height)),\n            posXNorm = posX / canvas.width,\n            posYNorm = posY / canvas.height;\n\n        var sat = Math.round(posXNorm * this._valueSatMinMax[1]),\n            val = Math.round((1.0 - posYNorm) * this._valueValMinMax[1]);\n\n        this._setColorHSV(this._valueHue, sat, val);\n\n        this._updateColorRGBFromHSV();\n        this._updateColorHEXFromRGB();\n\n        this._updateHandleField();\n    },\n\n    _updateHandleField: function () {\n        var width = this._canvasField.width,\n            height = this._canvasField.height,\n            offsetHandle = this._handleFieldSize * 0.25;\n\n        var satNorm = this._valueSat / this._valueSatMinMax[1],\n            valNorm = this._valueVal / this._valueValMinMax[1];\n\n        this._handleField.setPositionGlobal(satNorm * width - offsetHandle,\n            (1.0 - valNorm) * height - offsetHandle);\n\n    },\n\n    _drawHandleSlider: function () {\n        var canvas = this._canvasSlider,\n            canvasPosY = this._canvasSliderPos[1],\n            mousePosY = Mouse.get().getY();\n\n        var posY = Math.max(0, Math.min(mousePosY - canvasPosY, canvas.height)),\n            posYNorm = posY / canvas.height;\n\n        var hue = Math.floor((1.0 - posYNorm) * this._valueHueMinMax[1]);\n\n        this._setColorHSV(hue, this._valueSat, this._valueVal);\n\n        this._updateColorRGBFromHSV();\n        this._updateColorHEXFromRGB();\n\n        this._updateHandleSlider();\n    },\n\n    _updateHandleSlider: function () {\n        var height = this._canvasSlider.height,\n            offsetHandle = this._handleSliderHeight * 0.25;\n\n        var hueNorm = this._valueHue / this._valueHueMinMax[1];\n\n        this._handleSlider.setPositionGlobalY((height - offsetHandle) * (1.0 - hueNorm));\n    },\n\n    _updateHandles: function () {\n        this._updateHandleField();\n        this._updateHandleSlider();\n    },\n\n    /*---------------------------------------------------------------------------------*/\n\n    _setHue: function (value) {\n        var minMax = this._valueHueMinMax;\n\n        this._valueHue = value == minMax[1] ? minMax[0] : value;\n        this._updateColorHSV();\n        this._drawCanvasField();\n    },\n\n    _setSat: function (value) {\n        this._valueSat = Math.round(value);\n        this._updateColorHSV();\n    },\n\n    _setVal: function (value) {\n        this._valueVal = Math.round(value);\n        this._updateColorHSV();\n    },\n\n    _setR: function (value) {\n        this._valueR = Math.round(value);\n        this._updateColorRGB();\n    },\n\n    _setG: function (value) {\n        this._valueG = Math.round(value);\n        this._updateColorRGB();\n    },\n\n    _setB: function (value) {\n        this._valueB = Math.round(value);\n        this._updateColorRGB();\n    },\n\n    /*---------------------------------------------------------------------------------*/\n\n    _onInputHueChange: function () {\n        var input = this._inputHue,\n            inputVal = this._getValueContrained(input, this._valueHueMinMax);\n\n        var minMax = this._valueHueMinMax;\n\n        if (inputVal == minMax[1]) {\n            inputVal = minMax[0];\n            input.setValue(inputVal);\n        }\n\n        this._setHue(inputVal);\n        this._updateColorRGBFromHSV();\n        this._updateColorHEXFromRGB();\n        this._updateHandleSlider();\n\n        this._drawCanvasField();\n    },\n\n    _onInputSatChange: function () {\n        this._setSat(this._getValueContrained(this._inputSat, this._valueSatMinMax));\n        this._onInputSVChange();\n    },\n\n    _onInputValChange: function () {\n        this._setVal(this._getValueContrained(this._inputVal, this._valueValMinMax));\n        this._onInputSVChange();\n    },\n\n    _onInputRChange: function () {\n        this._setR(this._getValueContrained(this._inputR, this._valueRGBMinMax));\n        this._onInputRGBChange();\n    },\n\n    _onInputGChange: function () {\n        this._setG(this._getValueContrained(this._inputG, this._valueRGBMinMax));\n        this._onInputRGBChange();\n    },\n\n    _onInputBChange: function () {\n        this._setB(this._getValueContrained(this._inputB, this._valueRGBMinMax));\n        this._onInputRGBChange();\n    },\n\n    _onInputHEXFinish: function () {\n        var input = this._inputHEX,\n            value = input.getProperty('value');\n\n        if (!ColorUtil.isValidHEX(value)) {\n            input.setProperty('value', this._valueHEXValid);\n            return;\n        }\n\n        this._valueHEX = this._valueHEXValid = value;\n        this._updateColorFromHEX();\n    },\n\n    _onInputSVChange: function () {\n        this._updateColorRGBFromHSV();\n        this._updateColorHEXFromRGB();\n        this._updateHandleField();\n    },\n\n    _onInputRGBChange: function () {\n        this._updateColorHSVFromRGB();\n        this._updateColorHEXFromRGB();\n        this._updateHandles();\n    },\n\n    _getValueContrained: function (input, minMax) {\n        var inputVal = Math.round(input.getValue()),\n            min = minMax[0],\n            max = minMax[1];\n\n        if (inputVal <= min) {\n            inputVal = min;\n            input.setValue(inputVal);\n        }\n        if (inputVal >= max) {\n            inputVal = max;\n            input.setValue(inputVal);\n        }\n\n        return inputVal;\n    },\n\n\n    _updateInputHue: function () {\n        this._inputHue.setValue(this._valueHue);\n    },\n    _updateInputSat: function () {\n        this._inputSat.setValue(this._valueSat);\n    },\n    _updateInputVal: function () {\n        this._inputVal.setValue(this._valueVal);\n    },\n    _updateInputR: function () {\n        this._inputR.setValue(this._valueR);\n    },\n    _updateInputG: function () {\n        this._inputG.setValue(this._valueG);\n    },\n    _updateInputB: function () {\n        this._inputB.setValue(this._valueB);\n    },\n    _updateInputHEX: function () {\n        this._inputHEX.setProperty('value', this._valueHEX);\n    },\n\n\n    _setColorHSV: function (hue, sat, val) {\n        this._valueHue = hue;\n        this._valueSat = sat;\n        this._valueVal = val;\n\n        this._updateInputHue();\n        this._updateInputSat();\n        this._updateInputVal();\n\n        this._updateContrastCurrColor();\n    },\n\n    _setColorRGB: function (r, g, b) {\n        this._valueR = r;\n        this._valueG = g;\n        this._valueB = b;\n\n        this._updateInputR();\n        this._updateInputG();\n        this._updateInputB();\n\n        this._updateContrastCurrColor();\n    },\n\n    _setColorHEX: function (hex) {\n        this._valueHEX = hex;\n        this._updateInputHEX();\n    },\n\n    _updateColorHSV: function () {\n        this._setColorHSV(this._valueHue, this._valueSat, this._valueVal);\n        this._updateContrastCurrColor();\n    },\n\n    _updateColorRGB: function () {\n        this._setColorRGB(this._valueR, this._valueG, this._valueB);\n        this._updateContrastCurrColor();\n    },\n\n    _updateColorHSVFromRGB: function () {\n        var hsv = ColorUtil.RGB2HSV(this._valueR, this._valueG, this._valueB);\n        this._setColorHSV(hsv[0], hsv[1], hsv[2]);\n    },\n\n    _updateColorRGBFromHSV: function () {\n        var rgb = ColorUtil.HSV2RGB(this._valueHue, this._valueSat, this._valueVal);\n        this._setColorRGB(rgb[0], rgb[1], rgb[2]);\n    },\n\n    _updateColorHEXFromRGB: function () {\n        var hex = ColorUtil.RGB2HEX(this._valueR, this._valueG, this._valueB);\n        this._setColorHEX(hex);\n    },\n\n    _updateColorFromHEX: function () {\n        var rgb = ColorUtil.HEX2RGB(this._valueHEX);\n\n        this._setColorRGB(rgb[0], rgb[1], rgb[2]);\n        this._updateColorHSVFromRGB();\n        this._updateHandles();\n    },\n\n    _updateContrastCurrColor: function () {\n        this._setContrastCurrColor(this._valueR, this._valueG, this._valueB);\n    },\n    _updateContrastPrevColor: function () {\n        this._setContrasPrevColor(this._valueR, this._valueG, this._valueB)\n    },\n\n    _setContrastCurrColor: function (r, g, b) {\n        this._colorCurrNode.setStyleProperty('background', 'rgb(' + r + ',' + g + ',' + b + ')')\n    },\n    _setContrasPrevColor: function (r, g, b) {\n        this._colorPrevNode.setStyleProperty('background', 'rgb(' + r + ',' + g + ',' + b + ')')\n    },\n\n    _onHeadDragStart: function () {\n        var node = this._node,\n            parentNode = this._parentNode;\n\n        var nodePos = node.getPositionGlobal(),\n            mousePos = Mouse.get().getPosition(),\n            offsetPos = this._mouseOffset;\n\n        offsetPos[0] = mousePos[0] - nodePos[0];\n        offsetPos[1] = mousePos[1] - nodePos[1];\n\n        var eventMouseMove = DocumentEvent.MOUSE_MOVE,\n            eventMouseUp = DocumentEvent.MOUSE_UP;\n\n        var self = this;\n\n        var onDrag = function () {\n                self._updatePosition();\n                self._updateCanvasNodePositions();\n            },\n\n            onDragEnd = function () {\n                self._updateCanvasNodePositions();\n                document.removeEventListener(eventMouseMove, onDrag, false);\n                document.removeEventListener(eventMouseUp, onDragEnd, false);\n            };\n\n        parentNode.removeChild(node);\n        parentNode.addChild(node);\n\n        document.addEventListener(eventMouseMove, onDrag, false);\n        document.addEventListener(eventMouseUp, onDragEnd, false);\n\n        this._updateCanvasNodePositions();\n    },\n\n    _updatePosition: function () {\n        var mousePos = Mouse.get().getPosition(),\n            offsetPos = this._mouseOffset;\n\n        var currPositionX = mousePos[0] - offsetPos[0],\n            currPositionY = mousePos[1] - offsetPos[1];\n\n        var node = this._node,\n            head = this._headNode,\n            position = this._position;\n\n        var maxX = window.innerWidth - node.getWidth(),\n            maxY = window.innerHeight - head.getHeight();\n\n        position[0] = Math.max(0, Math.min(currPositionX, maxX));\n        position[1] = Math.max(0, Math.min(currPositionY, maxY));\n\n        node.setPositionGlobal(position[0], position[1]);\n    },\n\n    _drawCanvasField: function () {\n        var canvas = this._canvasField,\n            context = this._contextCanvasField;\n\n        var width = canvas.width,\n            height = canvas.height,\n            invWidth = 1 / width,\n            invHeight = 1 / height;\n\n        var imageData = this._imageDataField,\n            rgb = [],\n            index = 0;\n\n        var valueHue = this._valueHue;\n\n        var i = -1, j;\n        while (++i < height) {\n            j = -1;\n\n            while (++j < width) {\n                rgb = ColorUtil.HSV2RGB(valueHue, j * invWidth * 100.0, ( 1.0 - i * invHeight ) * 100.0);\n                index = (i * width + j) * 4;\n\n                imageData.data[index] = rgb[0];\n                imageData.data[index + 1] = rgb[1];\n                imageData.data[index + 2] = rgb[2];\n                imageData.data[index + 3] = 255;\n            }\n        }\n\n        context.putImageData(imageData, 0, 0);\n    },\n\n    _drawCanvasSlider: function () {\n        var canvas = this._canvasSlider,\n            context = this._contextCanvasSlider;\n\n        var width = canvas.width,\n            height = canvas.height,\n            invHeight = 1 / height;\n\n        var imageData = this._imageDataSlider,\n            rgb = [],\n            index = 0;\n\n        var i = -1, j;\n        while (++i < height) {\n            j = -1;\n\n            while (++j < width) {\n                rgb = ColorUtil.HSV2RGB((1.0 - i * invHeight) * 360.0, 100.0, 100.0);\n                index = (i * width + j) * 4;\n\n                imageData.data[index] = rgb[0];\n                imageData.data[index + 1] = rgb[1];\n                imageData.data[index + 2] = rgb[2];\n                imageData.data[index + 3] = 255;\n            }\n        }\n\n        context.putImageData(imageData, 0, 0);\n\n    },\n\n    _onCanvasFieldMouseDown: function () {\n        var eventMouseMove = DocumentEvent.MOUSE_MOVE,\n            eventMouseUp = DocumentEvent.MOUSE_UP;\n\n        var self = this;\n\n        var onDrag = function () {\n                self._drawHandleField();\n            },\n            onDragEnd = function () {\n                document.removeEventListener(eventMouseMove, onDrag, false);\n                document.removeEventListener(eventMouseUp, onDragEnd, false);\n            };\n\n        document.addEventListener(eventMouseMove, onDrag, false);\n        document.addEventListener(eventMouseUp, onDragEnd, false);\n\n        self._drawHandleField();\n    },\n\n    _onCanvasSliderMouseDown: function () {\n        var eventMouseMove = DocumentEvent.MOUSE_MOVE,\n            eventMouseUp = DocumentEvent.MOUSE_UP;\n\n        var self = this;\n\n        var onDrag = function () {\n                self._drawHandleSlider();\n                self._drawCanvasField();\n            },\n\n            onDragEnd = function () {\n                document.removeEventListener(eventMouseMove, onDrag, false);\n                document.removeEventListener(eventMouseUp, onDragEnd, false);\n                self._drawCanvasField();\n            };\n\n        document.addEventListener(eventMouseMove, onDrag, false);\n        document.addEventListener(eventMouseUp, onDragEnd, false);\n\n        self._drawHandleSlider();\n        self._drawCanvasField();\n    },\n\n    _setSizeCanvasField: function (width, height) {\n        var canvas = this._canvasField;\n        canvas.style.width = width + 'px';\n        canvas.style.height = height + 'px';\n        canvas.width = width;\n        canvas.height = height;\n\n    },\n\n    _setSizeCanvasSlider: function (width, height) {\n        var canvas = this._canvasSlider;\n        canvas.style.width = width + 'px';\n        canvas.style.height = height + 'px';\n        canvas.width = width;\n        canvas.height = height;\n    },\n\n    open: function () {\n        var node = this._node;\n\n        this._parentNode.addChild(node);\n\n        var position = this._position;\n        if(position[0] === null || position[1] === null){\n            position[0] = window.innerWidth * 0.5 - node.getWidth() * 0.5;\n            position[1] = window.innerHeight * 0.5 - node.getHeight() * 0.5;\n        } else {\n            position[0] = Math.max(0,Math.min(position[0],window.innerWidth - node.getWidth()));\n            position[1] = Math.max(0,Math.min(position[1],window.innerHeight - node.getHeight()));\n        }\n\n        node.setPositionGlobal(position[0],position[1]);\n        this._updateCanvasNodePositions();\n    },\n\n    close: function () {\n        this._parentNode.removeChild(this._node);\n    },\n\n    _onClose: function (e) {\n        e.cancelBubble = true;\n        this.close();\n    },\n    _onPick: function () {\n        this._callbackPick();\n        this.close();\n    },\n\n    _updateCanvasNodePositions: function () {\n        var canvasSliderPos = this._canvasSliderPos,\n            canvasFieldPos = this._canvasFieldPos;\n\n        canvasSliderPos[0] = canvasSliderPos[1] = 0;\n        canvasFieldPos[0] = canvasFieldPos[1] = 0;\n\n        var element = this._canvasSlider;\n\n        while (element) {\n            canvasSliderPos[0] += element.offsetLeft;\n            canvasSliderPos[1] += element.offsetTop;\n            element = element.offsetParent;\n        }\n\n        element = this._canvasField;\n\n        while (element) {\n            canvasFieldPos[0] += element.offsetLeft;\n            canvasFieldPos[1] += element.offsetTop;\n            element = element.offsetParent;\n        }\n    },\n\n    setCallbackPick: function (func) {\n        this._callbackPick = func;\n    },\n\n    setColorHEX: function (hex) {\n        this._setColorHEX(hex);\n        this._updateColorFromHEX();\n        this._setColor();\n    },\n\n    setColorRGB: function (r, g, b) {\n        this._setColorRGB(r, g, b);\n        this._updateColorHEXFromRGB();\n        this._updateColorHSVFromRGB();\n        this._setColor();\n    },\n\n    setColorRGBfv: function (r, g, b) {\n        this.setColorRGB(Math.floor(r * 255.0),\n            Math.floor(g * 255.0),\n            Math.floor(b * 255.0));\n    },\n\n    setColorHSV: function (h, s, v) {\n        this._setColorHSV(h, s, v);\n        this._updateColorRGBFromHSV();\n        this._updateColorHEXFromRGB();\n        this._setColor();\n    },\n\n    _setColor: function () {\n        this._drawCanvasField();\n        this._drawCanvasSlider();\n        this._updateHandles();\n        this._setContrasPrevColor(this._valueR, this._valueG, this._valueB);\n    },\n\n    getR: function () {\n        return this._valueR;\n    },\n    getG: function () {\n        return this._valueG;\n    },\n    getB: function () {\n        return this._valueB;\n    },\n    getRGB: function () {\n        return [this._valueR, this._valueG, this._valueB];\n    },\n    getHue: function () {\n        return this._valueHue;\n    },\n    getSat: function () {\n        return this._valueSat;\n    },\n    getVal: function () {\n        return this._valueVal;\n    },\n    getHSV: function () {\n        return [this._valueHue, this._valueSat, this._valueVal];\n    },\n    getHEX: function () {\n        return this._valueHEX;\n    },\n    getRGBfv: function () {\n        return [this._valueR / 255.0, this._valueG / 255.0, this._valueB / 255.0];\n    },\n\n    getNode: function () {\n        return this._node;\n    }\n};\n\nPicker.setup = function (parentNode) {\n    return Picker._instance = new Picker(parentNode);\n};\nPicker.get = function () {\n    return Picker._instance;\n};\nPicker.destroy = function(){\n    Picker._instance = null;\n};\n\nmodule.exports = Picker;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}