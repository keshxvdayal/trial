{"ast":null,"code":"var Plotter = require('./Plotter');\nvar Node = require('../core/document/Node');\nvar CSS = require('../core/document/CSS');\nvar FunctionPlotType = require('./FunctionPlotType');\nvar Mouse = require('../core/document/Mouse');\nvar Metric = require('./Metric');\nvar DocumentEvent = require('../core/document/DocumentEvent'),\n  ComponentEvent = require('../core/ComponentEvent'),\n  NodeEvent = require('../core/document/NodeEvent');\nvar FunctionPlotterObjectError = require('./FunctionPlotterObjectError'),\n  FunctionPlotterFunctionArgsError = require('./FunctionPlotterFunctionArgsError');\nvar ObjectComponentNotifier = require('../core/ObjectComponentNotifier');\nvar DEFAULT_SHOW_MIN_MAX_LABELS = true;\nvar DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_X = 1,\n  DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_Y = 1,\n  DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_X = 0.25,\n  DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_Y = 0.25,\n  DEFAULT_FUNCTION_PLOTTER_UNIT_MIN = 0.15,\n  DEFAULT_FUNCTION_PLOTTER_UNIT_MAX = 4,\n  DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_SCALE = 10.0,\n  DEFAULT_FUNCTION_PLOTTER_IMPLICIT_SCALE = 1.0,\n  DEFAULT_FUNCTION_PLOTTER_SCALE_MIN = 0.02,\n  DEFAULT_FUNCTION_PLOTTER_SCALE_MAX = 25,\n  DEFAULT_FUNCTION_PLOTTER_IMPLICIT_AXES_COLOR = 'rgba(255,255,255,0.75)',\n  DEFAULT_FUNCTION_PLOTTER_IMPLICIT_GRID_COLOR = 'rgba(25,25,25,0.75)',\n  DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_AXES_COLOR = 'rgb(54,60,64)',\n  DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_GRID_COLOR = 'rgb(25,25,25)',\n  DEFAULT_FUNCTION_PLOTTER_CIRCLE_LABEL_RADIUS = 3,\n  DEFAULT_FUNCTION_PLOTTER_CIRCLE_LABEL_FILL = 'rgb(255,255,255)',\n  DEFAULT_FUNCTION_PLOTTER_CIRCLE_STROKE = '#b12334';\nfunction FunctionPlotter(parent, object, value, params) {\n  params = params || {};\n  params.showMinMaxLabels = params.showMinMaxLabels === undefined ? DEFAULT_SHOW_MIN_MAX_LABELS : params.showMinMaxLabels;\n  Plotter.apply(this, arguments);\n  if (typeof object[value] !== 'function') {\n    throw new FunctionPlotterObjectError(object, value);\n  }\n  var funcArgLength = object[value].length;\n  if (funcArgLength > 2 || funcArgLength == 0) {\n    throw new FunctionPlotterFunctionArgsError();\n  }\n  var svgRoot = this._svgRoot,\n    path = this._path;\n  var axes = this._axes = svgRoot.insertBefore(this._createSVGObject('path'), path);\n  axes.style.strokeWidth = 1;\n  var axesLabels = this._axesLabels = svgRoot.insertBefore(this._createSVGObject('path'), path);\n  axesLabels.style.stroke = 'rgb(43,48,51)';\n  axesLabels.style.strokeWidth = 1;\n  var grid = this._grid;\n  var svg = this._svg,\n    size = Number(svg.getAttribute('width'));\n  var sliderXWrap = new Node();\n  sliderXWrap.setStyleClass(CSS.GraphSliderXWrap);\n  var sliderYWrap = new Node();\n  sliderYWrap.setStyleClass(CSS.GraphSliderYWrap);\n  var sliderXTrack = this._sliderXTrack = new Node();\n  sliderXTrack.setStyleClass(CSS.GraphSliderX);\n  var sliderYTrack = this._sliderYTrack = new Node();\n  sliderYTrack.setStyleClass(CSS.GraphSliderY);\n  var sliderXHandle = this._sliderXHandle = new Node();\n  sliderXHandle.setStyleClass(CSS.GraphSliderXHandle);\n  var sliderYHandle = this._sliderYHandle = new Node();\n  sliderYHandle.setStyleClass(CSS.GraphSliderYHandle);\n  sliderXTrack.addChild(sliderXHandle);\n  sliderYTrack.addChild(sliderYHandle);\n  sliderXWrap.addChild(sliderXTrack);\n  sliderYWrap.addChild(sliderYTrack);\n  var wrapNode = this._wrapNode;\n  var plotMode = this._plotMode = funcArgLength == 1 ? FunctionPlotType.NON_IMPLICIT : FunctionPlotType.IMPLICIT;\n  if (plotMode == FunctionPlotType.IMPLICIT) {\n    var canvas = this._canvas = document.createElement('canvas');\n    canvas.style.width = canvas.style.height = size + 'px';\n    canvas.width = canvas.height = size;\n    wrapNode.getElement().insertBefore(canvas, svg);\n    this._canvasContext = canvas.getContext('2d');\n    this._canvasImageData = this._canvasContext.getImageData(0, 0, size, size);\n    axes.style.stroke = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_AXES_COLOR;\n    grid.style.stroke = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_GRID_COLOR;\n  } else {\n    axes.style.stroke = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_AXES_COLOR;\n    grid.style.stroke = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_GRID_COLOR;\n  }\n  wrapNode.addChild(sliderXWrap);\n  wrapNode.addChild(sliderYWrap);\n  sliderXHandle.addEventListener(NodeEvent.MOUSE_DOWN, this._onSliderXHandleDown.bind(this));\n  sliderYHandle.addEventListener(NodeEvent.MOUSE_DOWN, this._onSliderYHandleDown.bind(this));\n  var units = this._units = [null, null];\n  this._scale = null;\n  if (plotMode == FunctionPlotType.NON_IMPLICIT) {\n    units[0] = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_X;\n    units[1] = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_Y;\n    this._scale = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_SCALE;\n  } else if (plotMode == FunctionPlotType.IMPLICIT) {\n    units[0] = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_X;\n    units[1] = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_Y;\n    this._scale = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_SCALE;\n  }\n  this._unitsMinMax = [DEFAULT_FUNCTION_PLOTTER_UNIT_MIN, DEFAULT_FUNCTION_PLOTTER_UNIT_MAX]; //1/8->4\n\n  this._scaleMinMax = [DEFAULT_FUNCTION_PLOTTER_SCALE_MIN, DEFAULT_FUNCTION_PLOTTER_SCALE_MAX]; //1/50 -> 25\n\n  this._center = [Math.round(size * 0.5), Math.round(size * 0.5)];\n  this._svgPos = [0, 0];\n  this._func = null;\n  this.setFunction(this._obj[this._key]);\n  this._sliderXHandleUpdate();\n  this._sliderYHandleUpdate();\n  svg.addEventListener(DocumentEvent.MOUSE_DOWN, this._onDragStart.bind(this), false);\n  this._wrapNode.getElement().addEventListener(\"mousewheel\", this._onScale.bind(this, false));\n  ObjectComponentNotifier.get().addEventListener(ComponentEvent.UPDATE_VALUE, this, 'onValueUpdate');\n}\nFunctionPlotter.prototype = Object.create(Plotter.prototype);\nFunctionPlotter.prototype.constructor = FunctionPlotter;\nFunctionPlotter.prototype._updateCenter = function () {\n  var svg = this._svg,\n    width = Number(svg.getAttribute('width')),\n    height = Number(svg.getAttribute('height'));\n  var mousePos = Mouse.get().getPosition(),\n    svgPos = this._svgPos,\n    center = this._center;\n  center[0] = Math.max(0, Math.min(mousePos[0] - svgPos[0], width));\n  center[1] = Math.max(0, Math.min(mousePos[1] - svgPos[1], height));\n  this._plotGraph();\n};\nFunctionPlotter.prototype._onDragStart = function (e) {\n  var svgPos = this._svgPos;\n  svgPos[0] = 0;\n  svgPos[1] = 0;\n\n  //skip to container\n  var element = this._svg.parentNode;\n  while (element) {\n    svgPos[0] += element.offsetLeft;\n    svgPos[1] += element.offsetTop;\n    element = element.offsetParent;\n  }\n  var eventMove = DocumentEvent.MOUSE_MOVE,\n    eventUp = DocumentEvent.MOUSE_UP;\n  var onDrag = this._updateCenter.bind(this),\n    onDragEnd = function () {\n      this._updateCenter.bind(this);\n      document.removeEventListener(eventMove, onDrag, false);\n      document.removeEventListener(eventUp, onDragEnd, false);\n    }.bind(this);\n  document.addEventListener(eventMove, onDrag, false);\n  document.addEventListener(eventUp, onDragEnd, false);\n  this._updateCenter();\n};\nFunctionPlotter.prototype._onScale = function (e) {\n  e = window.event || e;\n  this._scale += Math.max(-1, Math.min(1, e.wheelDelta || -e.detail)) * -1;\n  var scaleMinMax = this._scaleMinMax;\n  this._scale = Math.max(scaleMinMax[0], Math.min(this._scale, scaleMinMax[1]));\n  this._plotGraph();\n  e.preventDefault();\n};\nFunctionPlotter.prototype.onValueUpdate = function () {\n  this.setFunction(this._obj[this._key]);\n};\nFunctionPlotter.prototype._redraw = function () {\n  if (this._plotMode == FunctionPlotType.IMPLICIT) {\n    var size = this._wrapNode.getWidth(),\n      canvas = this._canvas;\n    canvas.style.width = canvas.style.height = size + 'px';\n    canvas.width = canvas.height = size;\n    this._canvasImageData = this._canvasContext.getImageData(0, 0, size, size);\n  }\n  this._sliderXHandleUpdate();\n  this._sliderYHandleUpdate();\n  this.setFunction(this._obj[this._key]);\n};\nFunctionPlotter.prototype.setFunction = function (func) {\n  this._func = func.bind(this._obj);\n  this._plotGraph();\n};\nFunctionPlotter.prototype._plotGraph = function () {\n  this._drawGrid();\n  this._drawAxes();\n  this._drawPlot();\n};\nFunctionPlotter.prototype._drawAxes = function () {\n  var svg = this._svg,\n    svgWidth = Number(svg.getAttribute('width')),\n    svgHeight = Number(svg.getAttribute('height'));\n  var center = this._center,\n    centerX = center[0],\n    centerY = center[1];\n  var pathCmd = '';\n  pathCmd += this._pathCmdLine(0, centerY, svgWidth, centerY);\n  pathCmd += this._pathCmdLine(centerX, 0, centerX, svgHeight);\n  this._axes.setAttribute('d', pathCmd);\n};\nFunctionPlotter.prototype._drawPlot = function () {\n  var width, height;\n  var center = this._center,\n    centerX = center[0],\n    centerY = center[1];\n  var units = this._units,\n    unitX,\n    unitY;\n  var scale = this._scale;\n  var normval, scaledVal, value, index;\n  var offsetX, offsetY;\n  var i;\n  if (this._plotMode == FunctionPlotType.NON_IMPLICIT) {\n    var svg = this._svg;\n    width = Number(svg.getAttribute('width'));\n    height = Number(svg.getAttribute('height'));\n    unitX = units[0] * scale;\n    unitY = height / (units[1] * scale);\n    offsetX = centerX / width;\n    var len = Math.floor(width),\n      points = new Array(len * 2);\n    i = -1;\n    while (++i < len) {\n      normval = -offsetX + i / len;\n      scaledVal = normval * unitX;\n      value = centerY - this._func(scaledVal) * unitY;\n      index = i * 2;\n      points[index] = i;\n      points[index + 1] = value;\n    }\n    var pathCmd = '';\n    pathCmd += this._pathCmdMoveTo(points[0], points[1]);\n    i = 2;\n    while (i < points.length) {\n      pathCmd += this._pathCmdLineTo(points[i], points[i + 1]);\n      i += 2;\n    }\n    this._path.setAttribute('d', pathCmd);\n  } else {\n    var canvas = this._canvas,\n      context = this._canvasContext,\n      imgData = this._canvasImageData;\n    width = canvas.width;\n    height = canvas.height;\n    unitX = units[0] * scale;\n    unitY = units[1] * scale;\n    offsetX = centerX / width;\n    offsetY = centerY / height;\n    var invWidth = 1 / width,\n      invHeight = 1 / height;\n    var rgb = [0, 0, 0];\n    var col0 = [30, 34, 36],\n      col1 = [255, 255, 255];\n    i = -1;\n    var j;\n    while (++i < height) {\n      j = -1;\n      while (++j < width) {\n        value = this._func((-offsetX + j * invWidth) * unitX, (-offsetY + i * invHeight) * unitY);\n        rgb[0] = Math.floor((col1[0] - col0[0]) * value + col0[0]);\n        rgb[1] = Math.floor((col1[1] - col0[1]) * value + col0[1]);\n        rgb[2] = Math.floor((col1[2] - col0[2]) * value + col0[2]);\n        index = (i * width + j) * 4;\n        imgData.data[index] = rgb[0];\n        imgData.data[index + 1] = rgb[1];\n        imgData.data[index + 2] = rgb[2];\n        imgData.data[index + 3] = 255;\n      }\n    }\n    context.clearRect(0, 0, width, height);\n    context.putImageData(imgData, 0, 0);\n  }\n};\nFunctionPlotter.prototype._drawGrid = function () {\n  var svg = this._svg,\n    width = Number(svg.getAttribute('width')),\n    height = Number(svg.getAttribute('height'));\n  var scale = this._scale;\n  var gridRes = this._units,\n    gridSpacingX = width / (gridRes[0] * scale),\n    gridSpacingY = height / (gridRes[1] * scale);\n  var center = this._center,\n    centerX = center[0],\n    centerY = center[1];\n  var gridNumTop = Math.round(centerY / gridSpacingY) + 1,\n    gridNumBottom = Math.round((height - centerY) / gridSpacingY) + 1,\n    gridNumLeft = Math.round(centerX / gridSpacingX) + 1,\n    gridNumRight = Math.round((width - centerX) / gridSpacingX) + 1;\n  var pathCmdGrid = '',\n    pathCmdAxesLabels = '';\n  var i, temp;\n  var strokeSize = Metric.STROKE_SIZE;\n  var labelTickSize = Metric.FUNCTION_PLOTTER_LABEL_TICK_SIZE,\n    labelTickPaddingRight = width - labelTickSize - strokeSize,\n    labelTickPaddingBottom = height - labelTickSize - strokeSize,\n    labelTickPaddingRightOffset = labelTickPaddingRight - labelTickSize,\n    labelTickPaddingBottomOffset = labelTickPaddingBottom - labelTickSize,\n    labelTickOffsetRight = labelTickPaddingRight - (labelTickSize + strokeSize) * 2,\n    labelTickOffsetBottom = labelTickPaddingBottom - (labelTickSize + strokeSize) * 2;\n  i = -1;\n  while (++i < gridNumTop) {\n    temp = Math.round(centerY - gridSpacingY * i);\n    pathCmdGrid += this._pathCmdLine(0, temp, width, temp);\n    if (temp > labelTickSize) {\n      pathCmdAxesLabels += this._pathCmdLine(labelTickPaddingRight, temp, labelTickPaddingRightOffset, temp);\n    }\n  }\n  i = -1;\n  while (++i < gridNumBottom) {\n    temp = Math.round(centerY + gridSpacingY * i);\n    pathCmdGrid += this._pathCmdLine(0, temp, width, temp);\n    if (temp < labelTickOffsetBottom) {\n      pathCmdAxesLabels += this._pathCmdLine(labelTickPaddingRight, temp, labelTickPaddingRightOffset, temp);\n    }\n  }\n  i = -1;\n  while (++i < gridNumLeft) {\n    temp = Math.round(centerX - gridSpacingX * i);\n    pathCmdGrid += this._pathCmdLine(temp, 0, temp, height);\n    if (temp > labelTickSize) {\n      pathCmdAxesLabels += this._pathCmdLine(temp, labelTickPaddingBottom, temp, labelTickPaddingBottomOffset);\n    }\n  }\n  i = -1;\n  while (++i < gridNumRight) {\n    temp = Math.round(centerX + gridSpacingX * i);\n    pathCmdGrid += this._pathCmdLine(temp, 0, temp, height);\n    if (temp < labelTickOffsetRight) {\n      pathCmdAxesLabels += this._pathCmdLine(temp, labelTickPaddingBottom, temp, labelTickPaddingBottomOffset);\n    }\n  }\n  this._grid.setAttribute('d', pathCmdGrid);\n  this._axesLabels.setAttribute('d', pathCmdAxesLabels);\n};\nFunctionPlotter.prototype._sliderXStep = function (mousePos) {\n  var mouseX = mousePos[0];\n  var handle = this._sliderXHandle,\n    handleWidth = handle.getWidth(),\n    handleWidthHalf = handleWidth * 0.5;\n  var track = this._sliderXTrack,\n    trackWidth = track.getWidth(),\n    trackLeft = track.getPositionGlobalX();\n  var strokeSize = Metric.STROKE_SIZE;\n  var max = trackWidth - handleWidthHalf - strokeSize * 2;\n  var pos = Math.max(handleWidthHalf, Math.min(mouseX - trackLeft, max)),\n    handlePos = pos - handleWidthHalf;\n  handle.setPositionX(handlePos);\n  var unitsMin = this._unitsMinMax[0],\n    unitsMax = this._unitsMinMax[1];\n  var normVal = (pos - handleWidthHalf) / (max - handleWidthHalf),\n    mappedVal = unitsMin + (unitsMax - unitsMin) * normVal;\n  this._units[0] = mappedVal;\n  this._plotGraph();\n};\nFunctionPlotter.prototype._sliderYStep = function (mousePos) {\n  var mouseY = mousePos[1];\n  var handle = this._sliderYHandle,\n    handleHeight = handle.getHeight(),\n    handleHeightHalf = handleHeight * 0.5;\n  var track = this._sliderYTrack,\n    trackHeight = track.getHeight(),\n    trackTop = track.getPositionGlobalY();\n  var max = trackHeight - handleHeightHalf - 2;\n  var pos = Math.max(handleHeightHalf, Math.min(mouseY - trackTop, max)),\n    handlePos = pos - handleHeightHalf;\n  handle.setPositionY(handlePos);\n  var unitsMax = this._unitsMinMax[0],\n    unitsMin = this._unitsMinMax[1];\n  var normVal = (pos - handleHeightHalf) / (max - handleHeightHalf),\n    mappedVal = unitsMin + (unitsMax - unitsMin) * normVal;\n  this._units[1] = mappedVal;\n  this._plotGraph();\n};\nFunctionPlotter.prototype._onSliderXHandleDown = function () {\n  this._onSliderHandleDown(this._sliderXStep.bind(this));\n};\nFunctionPlotter.prototype._onSliderYHandleDown = function () {\n  this._onSliderHandleDown(this._sliderYStep.bind(this));\n};\nFunctionPlotter.prototype._onSliderHandleDown = function (sliderStepFunc) {\n  var eventMouseMove = DocumentEvent.MOUSE_MOVE,\n    eventMouseUp = DocumentEvent.MOUSE_UP;\n  var mouse = Mouse.get();\n  var onDrag = function () {\n      sliderStepFunc(mouse.getPosition());\n    },\n    onDragEnd = function () {\n      document.removeEventListener(eventMouseMove, onDrag, false);\n      document.removeEventListener(eventMouseUp, onDragEnd, false);\n    };\n  sliderStepFunc(mouse.getPosition());\n  document.addEventListener(eventMouseMove, onDrag, false);\n  document.addEventListener(eventMouseUp, onDragEnd, false);\n};\nFunctionPlotter.prototype._sliderXHandleUpdate = function () {\n  var unitMin = this._unitsMinMax[0],\n    unitMax = this._unitsMinMax[1],\n    unitX = this._units[0];\n  var handleX = this._sliderXHandle,\n    handleXWidth = handleX.getWidth(),\n    handleXWidthHalf = handleXWidth * 0.5,\n    trackXWidth = this._sliderXTrack.getWidth();\n  var strokeSize = Metric.STROKE_SIZE;\n  var handleXMin = handleXWidthHalf,\n    handleXMax = trackXWidth - handleXWidthHalf - strokeSize * 2;\n  handleX.setPositionX(handleXMin + (handleXMax - handleXMin) * ((unitX - unitMin) / (unitMax - unitMin)) - handleXWidthHalf);\n};\nFunctionPlotter.prototype._sliderYHandleUpdate = function () {\n  var unitMin = this._unitsMinMax[0],\n    unitMax = this._unitsMinMax[1],\n    unitY = this._units[1];\n  var handleY = this._sliderYHandle,\n    handleYHeight = handleY.getHeight(),\n    handleYHeightHalf = handleYHeight * 0.5,\n    trackYHeight = this._sliderYTrack.getHeight();\n  var strokeSize = Metric.STROKE_SIZE;\n  var handleYMin = trackYHeight - handleYHeightHalf - strokeSize * 2,\n    handleYMax = handleYHeightHalf;\n  handleY.setPositionY(handleYMin + (handleYMax - handleYMin) * ((unitY - unitMin) / (unitMax - unitMin)) - handleYHeightHalf);\n};\nmodule.exports = FunctionPlotter;","map":{"version":3,"names":["Plotter","require","Node","CSS","FunctionPlotType","Mouse","Metric","DocumentEvent","ComponentEvent","NodeEvent","FunctionPlotterObjectError","FunctionPlotterFunctionArgsError","ObjectComponentNotifier","DEFAULT_SHOW_MIN_MAX_LABELS","DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_X","DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_Y","DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_X","DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_Y","DEFAULT_FUNCTION_PLOTTER_UNIT_MIN","DEFAULT_FUNCTION_PLOTTER_UNIT_MAX","DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_SCALE","DEFAULT_FUNCTION_PLOTTER_IMPLICIT_SCALE","DEFAULT_FUNCTION_PLOTTER_SCALE_MIN","DEFAULT_FUNCTION_PLOTTER_SCALE_MAX","DEFAULT_FUNCTION_PLOTTER_IMPLICIT_AXES_COLOR","DEFAULT_FUNCTION_PLOTTER_IMPLICIT_GRID_COLOR","DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_AXES_COLOR","DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_GRID_COLOR","DEFAULT_FUNCTION_PLOTTER_CIRCLE_LABEL_RADIUS","DEFAULT_FUNCTION_PLOTTER_CIRCLE_LABEL_FILL","DEFAULT_FUNCTION_PLOTTER_CIRCLE_STROKE","FunctionPlotter","parent","object","value","params","showMinMaxLabels","undefined","apply","arguments","funcArgLength","length","svgRoot","_svgRoot","path","_path","axes","_axes","insertBefore","_createSVGObject","style","strokeWidth","axesLabels","_axesLabels","stroke","grid","_grid","svg","_svg","size","Number","getAttribute","sliderXWrap","setStyleClass","GraphSliderXWrap","sliderYWrap","GraphSliderYWrap","sliderXTrack","_sliderXTrack","GraphSliderX","sliderYTrack","_sliderYTrack","GraphSliderY","sliderXHandle","_sliderXHandle","GraphSliderXHandle","sliderYHandle","_sliderYHandle","GraphSliderYHandle","addChild","wrapNode","_wrapNode","plotMode","_plotMode","NON_IMPLICIT","IMPLICIT","canvas","_canvas","document","createElement","width","height","getElement","_canvasContext","getContext","_canvasImageData","getImageData","addEventListener","MOUSE_DOWN","_onSliderXHandleDown","bind","_onSliderYHandleDown","units","_units","_scale","_unitsMinMax","_scaleMinMax","_center","Math","round","_svgPos","_func","setFunction","_obj","_key","_sliderXHandleUpdate","_sliderYHandleUpdate","_onDragStart","_onScale","get","UPDATE_VALUE","prototype","Object","create","constructor","_updateCenter","mousePos","getPosition","svgPos","center","max","min","_plotGraph","e","element","parentNode","offsetLeft","offsetTop","offsetParent","eventMove","MOUSE_MOVE","eventUp","MOUSE_UP","onDrag","onDragEnd","removeEventListener","window","event","wheelDelta","detail","scaleMinMax","preventDefault","onValueUpdate","_redraw","getWidth","func","_drawGrid","_drawAxes","_drawPlot","svgWidth","svgHeight","centerX","centerY","pathCmd","_pathCmdLine","setAttribute","unitX","unitY","scale","normval","scaledVal","index","offsetX","offsetY","i","len","floor","points","Array","_pathCmdMoveTo","_pathCmdLineTo","context","imgData","invWidth","invHeight","rgb","col0","col1","j","data","clearRect","putImageData","gridRes","gridSpacingX","gridSpacingY","gridNumTop","gridNumBottom","gridNumLeft","gridNumRight","pathCmdGrid","pathCmdAxesLabels","temp","strokeSize","STROKE_SIZE","labelTickSize","FUNCTION_PLOTTER_LABEL_TICK_SIZE","labelTickPaddingRight","labelTickPaddingBottom","labelTickPaddingRightOffset","labelTickPaddingBottomOffset","labelTickOffsetRight","labelTickOffsetBottom","_sliderXStep","mouseX","handle","handleWidth","handleWidthHalf","track","trackWidth","trackLeft","getPositionGlobalX","pos","handlePos","setPositionX","unitsMin","unitsMax","normVal","mappedVal","_sliderYStep","mouseY","handleHeight","getHeight","handleHeightHalf","trackHeight","trackTop","getPositionGlobalY","setPositionY","_onSliderHandleDown","sliderStepFunc","eventMouseMove","eventMouseUp","mouse","unitMin","unitMax","handleX","handleXWidth","handleXWidthHalf","trackXWidth","handleXMin","handleXMax","handleY","handleYHeight","handleYHeightHalf","trackYHeight","handleYMin","handleYMax","module","exports"],"sources":["/Users/jarvis/Desktop/Porfolio/KESHAV'S portfolio/Portfolio/node_modules/controlkit/lib/component/FunctionPlotter.js"],"sourcesContent":["var Plotter = require('./Plotter');\n\nvar Node = require('../core/document/Node');\nvar CSS = require('../core/document/CSS');\nvar FunctionPlotType = require('./FunctionPlotType');\n\n\nvar Mouse = require('../core/document/Mouse');\nvar Metric = require('./Metric');\n\nvar DocumentEvent  = require('../core/document/DocumentEvent'),\n    ComponentEvent = require('../core/ComponentEvent'),\n    NodeEvent      = require('../core/document/NodeEvent');\n\nvar FunctionPlotterObjectError       = require('./FunctionPlotterObjectError'),\n    FunctionPlotterFunctionArgsError = require('./FunctionPlotterFunctionArgsError');\n\nvar ObjectComponentNotifier = require('../core/ObjectComponentNotifier');\n\nvar DEFAULT_SHOW_MIN_MAX_LABELS = true;\n\nvar DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_X  =  1,\n    DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_Y  =  1,\n    DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_X  = 0.25,\n    DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_Y  = 0.25,\n    DEFAULT_FUNCTION_PLOTTER_UNIT_MIN  = 0.15,\n    DEFAULT_FUNCTION_PLOTTER_UNIT_MAX  = 4,\n    DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_SCALE  = 10.0,\n    DEFAULT_FUNCTION_PLOTTER_IMPLICIT_SCALE = 1.0,\n    DEFAULT_FUNCTION_PLOTTER_SCALE_MIN = 0.02,\n    DEFAULT_FUNCTION_PLOTTER_SCALE_MAX = 25,\n\n    DEFAULT_FUNCTION_PLOTTER_IMPLICIT_AXES_COLOR = 'rgba(255,255,255,0.75)',\n    DEFAULT_FUNCTION_PLOTTER_IMPLICIT_GRID_COLOR = 'rgba(25,25,25,0.75)',\n\n    DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_AXES_COLOR = 'rgb(54,60,64)',\n    DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_GRID_COLOR = 'rgb(25,25,25)',\n\n    DEFAULT_FUNCTION_PLOTTER_CIRCLE_LABEL_RADIUS = 3,\n    DEFAULT_FUNCTION_PLOTTER_CIRCLE_LABEL_FILL   = 'rgb(255,255,255)',\n    DEFAULT_FUNCTION_PLOTTER_CIRCLE_STROKE       = '#b12334';\n\nfunction FunctionPlotter(parent, object, value, params) {\n    params = params || {};\n    params.showMinMaxLabels = params.showMinMaxLabels === undefined ? DEFAULT_SHOW_MIN_MAX_LABELS : params.showMinMaxLabels;\n\n    Plotter.apply(this, arguments);\n\n    if (typeof object[value] !== 'function') {\n        throw new FunctionPlotterObjectError(object,value);\n    }\n\n    var funcArgLength = object[value].length;\n\n    if (funcArgLength > 2 || funcArgLength == 0) {\n        throw new FunctionPlotterFunctionArgsError();\n    }\n\n    var svgRoot = this._svgRoot,\n        path = this._path;\n\n    var axes = this._axes = svgRoot.insertBefore(this._createSVGObject('path'), path);\n        axes.style.strokeWidth = 1;\n\n    var axesLabels = this._axesLabels = svgRoot.insertBefore(this._createSVGObject('path'), path);\n        axesLabels.style.stroke = 'rgb(43,48,51)';\n        axesLabels.style.strokeWidth = 1;\n\n    var grid = this._grid;\n\n    var svg = this._svg,\n        size = Number(svg.getAttribute('width'));\n\n    var sliderXWrap = new Node();\n        sliderXWrap.setStyleClass(CSS.GraphSliderXWrap);\n\n    var sliderYWrap = new Node();\n        sliderYWrap.setStyleClass(CSS.GraphSliderYWrap);\n\n    var sliderXTrack = this._sliderXTrack = new Node();\n        sliderXTrack.setStyleClass(CSS.GraphSliderX);\n\n    var sliderYTrack = this._sliderYTrack = new Node();\n        sliderYTrack.setStyleClass(CSS.GraphSliderY);\n\n    var sliderXHandle = this._sliderXHandle = new Node();\n        sliderXHandle.setStyleClass(CSS.GraphSliderXHandle);\n\n    var sliderYHandle = this._sliderYHandle = new Node();\n        sliderYHandle.setStyleClass(CSS.GraphSliderYHandle);\n\n    sliderXTrack.addChild(sliderXHandle);\n    sliderYTrack.addChild(sliderYHandle);\n    sliderXWrap.addChild(sliderXTrack);\n    sliderYWrap.addChild(sliderYTrack);\n\n    var wrapNode = this._wrapNode;\n\n    var plotMode = this._plotMode = funcArgLength == 1 ?\n        FunctionPlotType.NON_IMPLICIT :\n        FunctionPlotType.IMPLICIT;\n\n    if (plotMode == FunctionPlotType.IMPLICIT) {\n        var canvas = this._canvas = document.createElement('canvas');\n        canvas.style.width = canvas.style.height = size + 'px';\n        canvas.width = canvas.height = size;\n\n        wrapNode.getElement().insertBefore(canvas, svg);\n\n        this._canvasContext = canvas.getContext('2d');\n        this._canvasImageData = this._canvasContext.getImageData(0, 0, size, size);\n\n        axes.style.stroke = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_AXES_COLOR;\n        grid.style.stroke = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_GRID_COLOR;\n    }\n    else {\n        axes.style.stroke = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_AXES_COLOR;\n        grid.style.stroke = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_GRID_COLOR;\n    }\n\n    wrapNode.addChild(sliderXWrap);\n    wrapNode.addChild(sliderYWrap);\n\n    sliderXHandle.addEventListener(NodeEvent.MOUSE_DOWN, this._onSliderXHandleDown.bind(this));\n    sliderYHandle.addEventListener(NodeEvent.MOUSE_DOWN, this._onSliderYHandleDown.bind(this));\n\n    var units = this._units = [null, null];\n    this._scale = null;\n\n    if (plotMode == FunctionPlotType.NON_IMPLICIT) {\n        units[0] = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_X;\n        units[1] = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_Y;\n\n        this._scale = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_SCALE;\n    }\n    else if (plotMode == FunctionPlotType.IMPLICIT) {\n        units[0] = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_X;\n        units[1] = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_Y;\n\n        this._scale = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_SCALE;\n    }\n\n    this._unitsMinMax = [DEFAULT_FUNCTION_PLOTTER_UNIT_MIN, DEFAULT_FUNCTION_PLOTTER_UNIT_MAX]; //1/8->4\n\n    this._scaleMinMax = [DEFAULT_FUNCTION_PLOTTER_SCALE_MIN, DEFAULT_FUNCTION_PLOTTER_SCALE_MAX]; //1/50 -> 25\n\n    this._center = [Math.round(size * 0.5),Math.round(size * 0.5)];\n    this._svgPos = [0, 0];\n\n    this._func = null;\n    this.setFunction(this._obj[this._key]);\n\n    this._sliderXHandleUpdate();\n    this._sliderYHandleUpdate();\n\n    svg.addEventListener(DocumentEvent.MOUSE_DOWN, this._onDragStart.bind(this), false);\n    this._wrapNode.getElement().addEventListener(\"mousewheel\", this._onScale.bind(this, false));\n\n    ObjectComponentNotifier.get().addEventListener(ComponentEvent.UPDATE_VALUE, this, 'onValueUpdate');\n}\nFunctionPlotter.prototype = Object.create(Plotter.prototype);\nFunctionPlotter.prototype.constructor = FunctionPlotter;\n\nFunctionPlotter.prototype._updateCenter = function () {\n    var svg = this._svg,\n        width = Number(svg.getAttribute('width')),\n        height = Number(svg.getAttribute('height'));\n\n    var mousePos = Mouse.get().getPosition(),\n        svgPos = this._svgPos,\n        center = this._center;\n\n    center[0] = Math.max(0, Math.min(mousePos[0] - svgPos[0], width));\n    center[1] = Math.max(0, Math.min(mousePos[1] - svgPos[1], height));\n\n    this._plotGraph();\n};\n\nFunctionPlotter.prototype._onDragStart = function (e) {\n    var svgPos = this._svgPos;\n    svgPos[0] = 0;\n    svgPos[1] = 0;\n\n    //skip to container\n    var element = this._svg.parentNode;\n\n    while (element) {\n        svgPos[0] += element.offsetLeft;\n        svgPos[1] += element.offsetTop;\n        element = element.offsetParent;\n    }\n\n    var eventMove = DocumentEvent.MOUSE_MOVE,\n        eventUp = DocumentEvent.MOUSE_UP;\n\n    var onDrag = this._updateCenter.bind(this),\n        onDragEnd = function () {\n            this._updateCenter.bind(this);\n            document.removeEventListener(eventMove, onDrag, false);\n            document.removeEventListener(eventUp, onDragEnd, false);\n\n        }.bind(this);\n\n    document.addEventListener(eventMove, onDrag, false);\n    document.addEventListener(eventUp, onDragEnd, false);\n\n    this._updateCenter();\n};\n\nFunctionPlotter.prototype._onScale = function (e) {\n    e = window.event || e;\n    this._scale += Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail))) * -1;\n\n    var scaleMinMax = this._scaleMinMax;\n    this._scale = Math.max(scaleMinMax[0], Math.min(this._scale, scaleMinMax[1]));\n\n    this._plotGraph();\n\n    e.preventDefault();\n\n};\n\nFunctionPlotter.prototype.onValueUpdate = function () {\n    this.setFunction(this._obj[this._key]);\n};\n\nFunctionPlotter.prototype._redraw = function () {\n    if (this._plotMode == FunctionPlotType.IMPLICIT) {\n        var size = this._wrapNode.getWidth(),\n            canvas = this._canvas;\n\n        canvas.style.width = canvas.style.height = size + 'px';\n        canvas.width = canvas.height = size;\n\n        this._canvasImageData = this._canvasContext.getImageData(0, 0, size, size);\n    }\n\n    this._sliderXHandleUpdate();\n    this._sliderYHandleUpdate();\n\n    this.setFunction(this._obj[this._key]);\n};\n\nFunctionPlotter.prototype.setFunction = function (func) {\n    this._func = func.bind(this._obj);\n    this._plotGraph();\n};\n\nFunctionPlotter.prototype._plotGraph = function () {\n    this._drawGrid();\n    this._drawAxes();\n    this._drawPlot();\n};\n\nFunctionPlotter.prototype._drawAxes = function () {\n    var svg = this._svg,\n        svgWidth = Number(svg.getAttribute('width')),\n        svgHeight = Number(svg.getAttribute('height'));\n\n    var center = this._center,\n        centerX = center[0],\n        centerY = center[1];\n\n    var pathCmd = '';\n    pathCmd += this._pathCmdLine(0, centerY, svgWidth, centerY);\n    pathCmd += this._pathCmdLine(centerX, 0, centerX, svgHeight);\n\n    this._axes.setAttribute('d', pathCmd);\n};\n\nFunctionPlotter.prototype._drawPlot = function () {\n    var width, height;\n\n    var center = this._center,\n        centerX = center[0],\n        centerY = center[1];\n\n    var units = this._units,\n        unitX, unitY;\n\n    var scale = this._scale;\n    var normval, scaledVal, value, index;\n    var offsetX, offsetY;\n\n    var i;\n\n    if (this._plotMode == FunctionPlotType.NON_IMPLICIT) {\n        var svg = this._svg;\n\n        width = Number(svg.getAttribute('width'));\n        height = Number(svg.getAttribute('height'));\n        unitX = units[0] * scale;\n        unitY = height / (units[1] * scale);\n        offsetX = centerX / width;\n\n        var len = Math.floor(width),\n            points = new Array(len * 2);\n\n        i = -1;\n        while (++i < len) {\n            normval = (-offsetX + i / len);\n            scaledVal = normval * unitX;\n            value = centerY - this._func(scaledVal) * unitY;\n\n            index = i * 2;\n\n            points[index] = i;\n            points[index + 1] = value;\n        }\n\n        var pathCmd = '';\n        pathCmd += this._pathCmdMoveTo(points[0], points[1]);\n\n        i = 2;\n        while (i < points.length) {\n            pathCmd += this._pathCmdLineTo(points[i], points[i + 1]);\n            i += 2;\n        }\n\n        this._path.setAttribute('d', pathCmd);\n    }\n    else {\n        var canvas = this._canvas,\n            context = this._canvasContext,\n            imgData = this._canvasImageData;\n\n        width = canvas.width;\n        height = canvas.height;\n\n        unitX = units[0] * scale;\n        unitY = units[1] * scale;\n\n        offsetX = centerX / width;\n        offsetY = centerY / height;\n\n        var invWidth = 1 / width,\n            invHeight = 1 / height;\n        var rgb = [0, 0, 0];\n\n        var col0 = [30, 34, 36],\n            col1 = [255, 255, 255];\n\n        i = -1;\n        var j;\n        while (++i < height) {\n            j = -1;\n\n            while (++j < width) {\n                value = this._func((-offsetX + j * invWidth) * unitX,\n                    (-offsetY + i * invHeight) * unitY);\n\n                rgb[0] = Math.floor((col1[0] - col0[0]) * value + col0[0]);\n                rgb[1] = Math.floor((col1[1] - col0[1]) * value + col0[1]);\n                rgb[2] = Math.floor((col1[2] - col0[2]) * value + col0[2]);\n\n                index = (i * width + j) * 4;\n\n                imgData.data[index] = rgb[0];\n                imgData.data[index + 1] = rgb[1];\n                imgData.data[index + 2] = rgb[2];\n                imgData.data[index + 3] = 255;\n            }\n        }\n\n        context.clearRect(0, 0, width, height);\n        context.putImageData(imgData, 0, 0);\n    }\n};\n\nFunctionPlotter.prototype._drawGrid = function () {\n    var svg = this._svg,\n        width = Number(svg.getAttribute('width')),\n        height = Number(svg.getAttribute('height'));\n\n    var scale = this._scale;\n\n    var gridRes = this._units,\n        gridSpacingX = width / (gridRes[0] * scale),\n        gridSpacingY = height / (gridRes[1] * scale);\n\n    var center = this._center,\n        centerX = center[0],\n        centerY = center[1];\n\n    var gridNumTop = Math.round(centerY / gridSpacingY) + 1,\n        gridNumBottom = Math.round((height - centerY) / gridSpacingY) + 1,\n        gridNumLeft = Math.round(centerX / gridSpacingX) + 1,\n        gridNumRight = Math.round((width - centerX) / gridSpacingX) + 1;\n\n    var pathCmdGrid = '',\n        pathCmdAxesLabels = '';\n\n    var i, temp;\n\n    var strokeSize = Metric.STROKE_SIZE;\n\n    var labelTickSize = Metric.FUNCTION_PLOTTER_LABEL_TICK_SIZE,\n        labelTickPaddingRight = width - labelTickSize - strokeSize,\n        labelTickPaddingBottom = height - labelTickSize - strokeSize,\n        labelTickPaddingRightOffset = labelTickPaddingRight - labelTickSize,\n        labelTickPaddingBottomOffset = labelTickPaddingBottom - labelTickSize,\n        labelTickOffsetRight = labelTickPaddingRight - (labelTickSize + strokeSize) * 2,\n        labelTickOffsetBottom = labelTickPaddingBottom - (labelTickSize + strokeSize) * 2;\n\n    i = -1;\n    while (++i < gridNumTop) {\n        temp = Math.round(centerY - gridSpacingY * i);\n        pathCmdGrid += this._pathCmdLine(0, temp, width, temp);\n\n        if (temp > labelTickSize){\n            pathCmdAxesLabels += this._pathCmdLine(labelTickPaddingRight, temp,\n                labelTickPaddingRightOffset, temp);\n        }\n    }\n\n    i = -1;\n    while (++i < gridNumBottom) {\n        temp = Math.round(centerY + gridSpacingY * i);\n        pathCmdGrid += this._pathCmdLine(0, temp, width, temp);\n\n        if (temp < labelTickOffsetBottom){\n            pathCmdAxesLabels += this._pathCmdLine(labelTickPaddingRight, temp,\n                labelTickPaddingRightOffset, temp);\n        }\n    }\n\n    i = -1;\n    while (++i < gridNumLeft) {\n        temp = Math.round(centerX - gridSpacingX * i);\n        pathCmdGrid += this._pathCmdLine(temp, 0, temp, height);\n\n        if (temp > labelTickSize){\n            pathCmdAxesLabels += this._pathCmdLine(temp, labelTickPaddingBottom,\n                temp, labelTickPaddingBottomOffset);\n        }\n    }\n\n    i = -1;\n    while (++i < gridNumRight) {\n        temp = Math.round(centerX + gridSpacingX * i);\n        pathCmdGrid += this._pathCmdLine(temp, 0, temp, height);\n\n        if (temp < labelTickOffsetRight){\n            pathCmdAxesLabels += this._pathCmdLine(temp, labelTickPaddingBottom,\n                temp, labelTickPaddingBottomOffset);\n        }\n    }\n\n    this._grid.setAttribute('d', pathCmdGrid);\n    this._axesLabels.setAttribute('d', pathCmdAxesLabels);\n};\n\n\nFunctionPlotter.prototype._sliderXStep = function (mousePos) {\n    var mouseX = mousePos[0];\n\n    var handle = this._sliderXHandle,\n        handleWidth = handle.getWidth(),\n        handleWidthHalf = handleWidth * 0.5;\n\n    var track = this._sliderXTrack,\n        trackWidth = track.getWidth(),\n        trackLeft = track.getPositionGlobalX();\n\n    var strokeSize = Metric.STROKE_SIZE;\n\n    var max = trackWidth - handleWidthHalf - strokeSize * 2;\n\n    var pos = Math.max(handleWidthHalf, Math.min(mouseX - trackLeft, max)),\n        handlePos = pos - handleWidthHalf;\n\n    handle.setPositionX(handlePos);\n\n    var unitsMin = this._unitsMinMax[0],\n        unitsMax = this._unitsMinMax[1];\n\n    var normVal = (pos - handleWidthHalf) / (max - handleWidthHalf),\n        mappedVal = unitsMin + (unitsMax - unitsMin) * normVal;\n\n    this._units[0] = mappedVal;\n\n    this._plotGraph();\n};\n\nFunctionPlotter.prototype._sliderYStep = function (mousePos) {\n    var mouseY = mousePos[1];\n\n    var handle = this._sliderYHandle,\n        handleHeight = handle.getHeight(),\n        handleHeightHalf = handleHeight * 0.5;\n\n    var track = this._sliderYTrack,\n        trackHeight = track.getHeight(),\n        trackTop = track.getPositionGlobalY();\n\n    var max = trackHeight - handleHeightHalf - 2;\n\n    var pos = Math.max(handleHeightHalf, Math.min(mouseY - trackTop, max)),\n        handlePos = pos - handleHeightHalf;\n\n    handle.setPositionY(handlePos);\n\n    var unitsMax = this._unitsMinMax[0],\n        unitsMin = this._unitsMinMax[1];\n\n    var normVal = (pos - handleHeightHalf) / (max - handleHeightHalf),\n        mappedVal = unitsMin + (unitsMax - unitsMin) * normVal;\n\n    this._units[1] = mappedVal;\n\n    this._plotGraph();\n};\n\nFunctionPlotter.prototype._onSliderXHandleDown = function () {\n    this._onSliderHandleDown(this._sliderXStep.bind(this));\n};\n\nFunctionPlotter.prototype._onSliderYHandleDown = function () {\n    this._onSliderHandleDown(this._sliderYStep.bind(this));\n};\n\nFunctionPlotter.prototype._onSliderHandleDown = function (sliderStepFunc) {\n    var eventMouseMove = DocumentEvent.MOUSE_MOVE,\n        eventMouseUp = DocumentEvent.MOUSE_UP;\n\n    var mouse = Mouse.get();\n\n    var onDrag = function () {\n            sliderStepFunc(mouse.getPosition())\n        },\n        onDragEnd = function () {\n            document.removeEventListener(eventMouseMove, onDrag, false);\n            document.removeEventListener(eventMouseUp, onDragEnd, false);\n        };\n\n    sliderStepFunc(mouse.getPosition());\n    document.addEventListener(eventMouseMove, onDrag, false);\n    document.addEventListener(eventMouseUp, onDragEnd, false);\n};\n\nFunctionPlotter.prototype._sliderXHandleUpdate = function () {\n    var unitMin = this._unitsMinMax[0],\n        unitMax = this._unitsMinMax[1],\n        unitX = this._units[0];\n\n    var handleX = this._sliderXHandle,\n        handleXWidth = handleX.getWidth(),\n        handleXWidthHalf = handleXWidth * 0.5,\n        trackXWidth = this._sliderXTrack.getWidth();\n\n    var strokeSize = Metric.STROKE_SIZE;\n\n    var handleXMin = handleXWidthHalf,\n        handleXMax = trackXWidth - handleXWidthHalf - strokeSize * 2;\n\n    handleX.setPositionX((handleXMin + (handleXMax - handleXMin) * ((unitX - unitMin) / (unitMax - unitMin))) - handleXWidthHalf);\n};\n\nFunctionPlotter.prototype._sliderYHandleUpdate = function () {\n    var unitMin = this._unitsMinMax[0],\n        unitMax = this._unitsMinMax[1],\n        unitY = this._units[1];\n\n    var handleY = this._sliderYHandle,\n        handleYHeight = handleY.getHeight(),\n        handleYHeightHalf = handleYHeight * 0.5,\n        trackYHeight = this._sliderYTrack.getHeight();\n\n    var strokeSize = Metric.STROKE_SIZE;\n\n    var handleYMin = trackYHeight - handleYHeightHalf - strokeSize * 2,\n        handleYMax = handleYHeightHalf;\n\n    handleY.setPositionY((handleYMin + (handleYMax - handleYMin) * ((unitY - unitMin) / (unitMax - unitMin))) - handleYHeightHalf);\n};\n\nmodule.exports = FunctionPlotter;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}