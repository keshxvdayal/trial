{"ast":null,"code":"var Plotter = require('./Plotter');\nvar Metric = require('./Metric');\nvar DEFAULT_RESOLUTION = 1;\nfunction ValuePlotter(parent, object, value, params) {\n  Plotter.apply(this, arguments);\n  var svg = this._svg,\n    svgWidth = Number(svg.getAttribute('width')),\n    svgHeight = Number(svg.getAttribute('height'));\n  params = params || {};\n  params.height = params.height || svgHeight;\n  params.resolution = params.resolution || DEFAULT_RESOLUTION;\n  var resolution = params.resolution,\n    length = Math.floor(svgWidth / resolution);\n  var points = this._points = new Array(length * 2),\n    buffer0 = this._buffer0 = new Array(length),\n    buffer1 = this._buffer1 = new Array(length);\n  var min = this._lineWidth * 0.5;\n  var i = -1;\n  while (++i < length) {\n    buffer0[i] = buffer1[i] = points[i * 2] = points[i * 2 + 1] = min;\n  }\n  this._height = params.height = params.height < Metric.COMPONENT_MIN_HEIGHT ? Metric.COMPONENT_MIN_HEIGHT : params.height;\n  this._svgSetSize(svgHeight, Math.floor(params.height));\n  this._grid.style.stroke = 'rgb(39,44,46)';\n  this._updateHeight();\n  this._drawValue();\n}\nValuePlotter.prototype = Object.create(Plotter.prototype);\nValuePlotter.prototype.constructor = ValuePlotter;\nValuePlotter.prototype._redraw = function () {\n  var points = this._points,\n    bufferLen = this._buffer0.length;\n  var width = Number(this._svg.getAttribute('width')),\n    ratio = width / (bufferLen - 1);\n  var i = -1;\n  while (++i < bufferLen) {\n    points[i * 2] = width - i * ratio;\n  }\n  this._drawValue();\n};\nValuePlotter.prototype.onGroupSizeChange = function () {\n  var width = this._wrapNode.getWidth(),\n    height = this._height;\n  this._svgSetSize(width, height);\n  this._updateHeight();\n  this._drawGrid();\n  this._redraw();\n};\nValuePlotter.prototype._drawValue = function () {\n  this._drawCurve();\n};\nValuePlotter.prototype._drawGrid = function () {\n  var svg = this._svg;\n  var svgWidth = Number(svg.getAttribute('width')),\n    svgHeightHalf = Math.floor(Number(svg.getAttribute('height')) * 0.5);\n  var pathCmd = '';\n  pathCmd += this._pathCmdMoveTo(0, svgHeightHalf);\n  pathCmd += this._pathCmdLineTo(svgWidth, svgHeightHalf);\n  this._grid.setAttribute('d', pathCmd);\n};\n\n//TODO: merge update + pathcmd\nValuePlotter.prototype._drawCurve = function () {\n  var svg = this._svg;\n  var value = this._obj[this._key];\n  var buffer0 = this._buffer0,\n    buffer1 = this._buffer1,\n    points = this._points;\n  var bufferLength = buffer0.length;\n  var pathCmd = '';\n  var heightHalf = Number(svg.getAttribute('height')) * 0.5,\n    unit = heightHalf - this._lineWidth * 0.5;\n  points[1] = buffer0[0];\n  buffer0[bufferLength - 1] = value * unit * -1 + Math.floor(heightHalf);\n  pathCmd += this._pathCmdMoveTo(points[0], points[1]);\n  var i = 0,\n    index;\n  while (++i < bufferLength) {\n    index = i * 2;\n    buffer1[i - 1] = buffer0[i];\n    points[index + 1] = buffer0[i - 1] = buffer1[i - 1];\n    pathCmd += this._pathCmdLineTo(points[index], points[index + 1]);\n  }\n  this._path.setAttribute('d', pathCmd);\n};\nValuePlotter.prototype.update = function () {\n  if (this._parent.isDisabled()) return;\n  this._drawValue();\n};\nmodule.exports = ValuePlotter;","map":{"version":3,"names":["Plotter","require","Metric","DEFAULT_RESOLUTION","ValuePlotter","parent","object","value","params","apply","arguments","svg","_svg","svgWidth","Number","getAttribute","svgHeight","height","resolution","length","Math","floor","points","_points","Array","buffer0","_buffer0","buffer1","_buffer1","min","_lineWidth","i","_height","COMPONENT_MIN_HEIGHT","_svgSetSize","_grid","style","stroke","_updateHeight","_drawValue","prototype","Object","create","constructor","_redraw","bufferLen","width","ratio","onGroupSizeChange","_wrapNode","getWidth","_drawGrid","_drawCurve","svgHeightHalf","pathCmd","_pathCmdMoveTo","_pathCmdLineTo","setAttribute","_obj","_key","bufferLength","heightHalf","unit","index","_path","update","_parent","isDisabled","module","exports"],"sources":["/Users/jarvis/Desktop/Porfolio/KESHAV'S portfolio/Portfolio/node_modules/controlkit/lib/component/ValuePlotter.js"],"sourcesContent":["var Plotter = require('./Plotter');\nvar Metric  = require('./Metric');\n\nvar DEFAULT_RESOLUTION = 1;\n\nfunction ValuePlotter(parent,object,value,params) {\n    Plotter.apply(this,arguments);\n\n    var svg       = this._svg,\n        svgWidth  = Number(svg.getAttribute('width')),\n        svgHeight = Number(svg.getAttribute('height'));\n\n    params            = params            || {};\n    params.height     = params.height     || svgHeight;\n    params.resolution = params.resolution || DEFAULT_RESOLUTION;\n\n    var resolution = params.resolution,\n        length     = Math.floor(svgWidth / resolution);\n\n    var points     = this._points  = new Array(length * 2),\n        buffer0    = this._buffer0 = new Array(length),\n        buffer1    = this._buffer1 = new Array(length);\n\n    var min = this._lineWidth * 0.5;\n\n    var i = -1;\n    while (++i < length) {\n        buffer0[i] = buffer1[i] = points[i * 2] = points[i * 2 + 1] = min;\n    }\n\n    this._height = params.height = params.height  < Metric.COMPONENT_MIN_HEIGHT ?\n                   Metric.COMPONENT_MIN_HEIGHT : params.height;\n\n    this._svgSetSize(svgHeight,Math.floor(params.height));\n    this._grid.style.stroke = 'rgb(39,44,46)';\n\n    this._updateHeight();\n    this._drawValue();\n}\nValuePlotter.prototype = Object.create(Plotter.prototype);\nValuePlotter.prototype.constructor = ValuePlotter;\n\nValuePlotter.prototype._redraw = function () {\n    var points = this._points,\n        bufferLen = this._buffer0.length;\n\n    var width = Number(this._svg.getAttribute('width')),\n        ratio = width / (bufferLen - 1);\n\n    var i = -1;\n    while (++i < bufferLen) {\n        points[i * 2] = width - i * ratio;\n    }\n\n    this._drawValue();\n};\n\nValuePlotter.prototype.onGroupSizeChange = function () {\n    var width = this._wrapNode.getWidth(),\n        height = this._height;\n\n    this._svgSetSize(width, height);\n    this._updateHeight();\n    this._drawGrid();\n    this._redraw();\n};\n\nValuePlotter.prototype._drawValue = function () {\n    this._drawCurve();\n};\n\nValuePlotter.prototype._drawGrid = function () {\n    var svg = this._svg;\n\n    var svgWidth = Number(svg.getAttribute('width')),\n        svgHeightHalf = Math.floor(Number(svg.getAttribute('height')) * 0.5);\n\n    var pathCmd = '';\n        pathCmd += this._pathCmdMoveTo(0, svgHeightHalf);\n        pathCmd += this._pathCmdLineTo(svgWidth, svgHeightHalf);\n\n    this._grid.setAttribute('d', pathCmd);\n};\n\n//TODO: merge update + pathcmd\nValuePlotter.prototype._drawCurve = function () {\n    var svg = this._svg;\n\n    var value = this._obj[this._key];\n\n    var buffer0 = this._buffer0,\n        buffer1 = this._buffer1,\n        points = this._points;\n\n    var bufferLength = buffer0.length;\n\n    var pathCmd = '';\n\n    var heightHalf = Number(svg.getAttribute('height')) * 0.5,\n        unit = heightHalf - this._lineWidth * 0.5;\n\n    points[1] = buffer0[0];\n    buffer0[bufferLength - 1] = (value * unit) * -1 + Math.floor(heightHalf);\n\n    pathCmd += this._pathCmdMoveTo(points[0], points[1]);\n\n    var i = 0, index;\n\n    while (++i < bufferLength) {\n        index = i * 2;\n\n        buffer1[i - 1] = buffer0[i];\n        points[index + 1] = buffer0[i - 1] = buffer1[i - 1];\n\n        pathCmd += this._pathCmdLineTo(points[index], points[index + 1]);\n    }\n\n    this._path.setAttribute('d', pathCmd);\n};\n\nValuePlotter.prototype.update = function () {\n    if (this._parent.isDisabled())return;\n    this._drawValue();\n}\n\n\nmodule.exports = ValuePlotter;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}