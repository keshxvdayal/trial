{"ast":null,"code":"gsap.registerPlugin(ScrollTrigger);\n\n// Using Locomotive Scroll from Locomotive https://github.com/locomotivemtl/locomotive-scroll\n\nconst locoScroll = new LocomotiveScroll({\n  el: document.querySelector(\".home\"),\n  smooth: true\n});\n// each time Locomotive Scroll updates, tell ScrollTrigger to update too (sync positioning)\nlocoScroll.on(\"scroll\", ScrollTrigger.update);\n\n// tell ScrollTrigger to use these proxy methods for the \".home\" element since Locomotive Scroll is hijacking things\nScrollTrigger.scrollerProxy(\".home\", {\n  scrollTop(value) {\n    return arguments.length ? locoScroll.scrollTo(value, 0, 0) : locoScroll.scroll.instance.scroll.y;\n  },\n  // we don't have to define a scrollLeft because we're only scrolling vertically.\n  getBoundingClientRect() {\n    return {\n      top: 0,\n      left: 0,\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  },\n  // LocomotiveScroll handles things completely differently on mobile devices - it doesn't even transform the container at all! So to get the correct behavior and avoid jitters, we should pin things with position: fixed on mobile. We sense it by checking to see if there's a transform applied to the container (the LocomotiveScroll-controlled element).\n  pinType: document.querySelector(\".home\").style.transform ? \"transform\" : \"fixed\"\n});\n\n// each time the window updates, we should refresh ScrollTrigger and then update LocomotiveScroll. \nScrollTrigger.addEventListener(\"refresh\", () => locoScroll.update());\n\n// after everything is set up, refresh() ScrollTrigger and update LocomotiveScroll because padding may have been added for pinning, etc.\nScrollTrigger.refresh();","map":{"version":3,"names":["gsap","registerPlugin","ScrollTrigger","locoScroll","LocomotiveScroll","el","document","querySelector","smooth","on","update","scrollerProxy","scrollTop","value","arguments","length","scrollTo","scroll","instance","y","getBoundingClientRect","top","left","width","window","innerWidth","height","innerHeight","pinType","style","transform","addEventListener","refresh"],"sources":["/Users/jarvis/Desktop/Porfolio/KESHAV'S portfolio/Portfolio/src/components/script.js"],"sourcesContent":["gsap.registerPlugin(ScrollTrigger);\n\n    // Using Locomotive Scroll from Locomotive https://github.com/locomotivemtl/locomotive-scroll\n\n    const locoScroll = new LocomotiveScroll({\n      el: document.querySelector(\".home\"),\n      smooth: true\n    });\n    // each time Locomotive Scroll updates, tell ScrollTrigger to update too (sync positioning)\n    locoScroll.on(\"scroll\", ScrollTrigger.update);\n\n    // tell ScrollTrigger to use these proxy methods for the \".home\" element since Locomotive Scroll is hijacking things\n    ScrollTrigger.scrollerProxy(\".home\", {\n      scrollTop(value) {\n        return arguments.length ? locoScroll.scrollTo(value, 0, 0) : locoScroll.scroll.instance.scroll.y;\n      }, // we don't have to define a scrollLeft because we're only scrolling vertically.\n      getBoundingClientRect() {\n        return { top: 0, left: 0, width: window.innerWidth, height: window.innerHeight };\n      },\n      // LocomotiveScroll handles things completely differently on mobile devices - it doesn't even transform the container at all! So to get the correct behavior and avoid jitters, we should pin things with position: fixed on mobile. We sense it by checking to see if there's a transform applied to the container (the LocomotiveScroll-controlled element).\n      pinType: document.querySelector(\".home\").style.transform ? \"transform\" : \"fixed\"\n    });\n\n    // each time the window updates, we should refresh ScrollTrigger and then update LocomotiveScroll. \n    ScrollTrigger.addEventListener(\"refresh\", () => locoScroll.update());\n\n    // after everything is set up, refresh() ScrollTrigger and update LocomotiveScroll because padding may have been added for pinning, etc.\n    ScrollTrigger.refresh();\n"],"mappings":"AAAAA,IAAI,CAACC,cAAc,CAACC,aAAa,CAAC;;AAE9B;;AAEA,MAAMC,UAAU,GAAG,IAAIC,gBAAgB,CAAC;EACtCC,EAAE,EAAEC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EACnCC,MAAM,EAAE;AACV,CAAC,CAAC;AACF;AACAL,UAAU,CAACM,EAAE,CAAC,QAAQ,EAAEP,aAAa,CAACQ,MAAM,CAAC;;AAE7C;AACAR,aAAa,CAACS,aAAa,CAAC,OAAO,EAAE;EACnCC,SAASA,CAACC,KAAK,EAAE;IACf,OAAOC,SAAS,CAACC,MAAM,GAAGZ,UAAU,CAACa,QAAQ,CAACH,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,GAAGV,UAAU,CAACc,MAAM,CAACC,QAAQ,CAACD,MAAM,CAACE,CAAC;EAClG,CAAC;EAAE;EACHC,qBAAqBA,CAAA,EAAG;IACtB,OAAO;MAAEC,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,KAAK,EAAEC,MAAM,CAACC,UAAU;MAAEC,MAAM,EAAEF,MAAM,CAACG;IAAY,CAAC;EAClF,CAAC;EACD;EACAC,OAAO,EAAEtB,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAACsB,KAAK,CAACC,SAAS,GAAG,WAAW,GAAG;AAC3E,CAAC,CAAC;;AAEF;AACA5B,aAAa,CAAC6B,gBAAgB,CAAC,SAAS,EAAE,MAAM5B,UAAU,CAACO,MAAM,CAAC,CAAC,CAAC;;AAEpE;AACAR,aAAa,CAAC8B,OAAO,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}